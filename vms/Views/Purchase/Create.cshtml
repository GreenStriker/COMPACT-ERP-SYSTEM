@{
    ViewData["Title"] = "Index";
}


<input type="hidden" class="form-control" id="ProductId" name="ProductId" />

<div class="custom-page-title">
    Purchase
</div>
<form method="post">
    <div class="row">
        <div class="col-md-8">
            <div class="row">

                <div class="col-md-3">
                    <div class="form-group form-md-line-input has-info">

                        <select id="VendorId" name="VendorId" class="form-control" asp-items="ViewBag.VendorId"></select>
                        <label>Vendor  </label>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group form-md-line-input has-info">
                        <input type="text" class="form-control" id="PurchaseInvoice" name="PurchaseInvoice" placeholder="#">
                        <label>Invoice</label>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group form-md-line-input has-info">
                        <input type="text" class="form-control" id="VoucherNo" name="VoucherNo" placeholder="#">
                        <label> Voucher No.</label>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group form-md-line-input has-info">
                        <input type="text" class="form-control" id="DiscountOnTotal" name="DiscountOnTotal" placeholder="00" value="0">
                        <label>Disc.Total</label>
                    </div>
                </div>

            </div>
        </div>

        <div class="col-md-4" style="border-left: 1px solid #eee">
            <div class="row">
                <div class="col-md-12">
                    <h4 class="form-header">Document</h4>
                    <table class="table table-bordered form-table" id="contentTable">
                        <thead>
                            <tr>
                                <th>Sl</th>

                                <th>File</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td></td>

                                <td class="form-group form-md-line-input has-info">
                                    <input type="file" name="FileUpload" id="FileUpload" class="form-control" />
                                </td>
                                <td>
                                    <a id="addDocument" class="" aria-label="Left Align">
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    </a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="col-md-12">
                    <h4 class="form-header">Payment</h4>
                    <table class="table table-bordered form-table" id="payment">
                        <thead>
                            <tr>
                                <th>Sl</th>
                                <th>Method</th>
                                <th>Paid Amount</th>
                                <th>Date</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td></td>
                                <td class="form-group form-md-line-input has-info">

                                    <select class="form-control" id="PaymentMethodId" name="PaymentMethodId">
                                        <option value="1">cash</option>
                                        <option value="2">Money Order</option>
                                        <option value="3">Online</option>
                                    </select>
                                </td>
                                <td class="form-group form-md-line-input has-info">
                                    <input type="text" name="PaidAmount" id="PaidAmount" class="form-control" />
                                </td>
                                <td class="form-group form-md-line-input has-info">
                                    <input type="text" name="PaymentDate" id="PaymentDate" class="form-control" autocomplete="off"/>
                                </td>
                                <td>
                                    <a id="addPayment" class="" aria-label="Left Align">
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    </a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 ">
            <h4 class="form-header">Purchase Details</h4>
            <table class="table table-bordered form-table" id="gridTable">
                <thead>
                    <tr>
                        <th style="width:40px">Sl</th>
                        <th style="width:180px">Product</th>
                        <th style="width:100px">Quantity</th>
                        <th style="width:100px">Amount</th>
                        <th style="width:100px">Discount</th>
                        <th style="width:150px">Price</th>
                        <th>

                        </th>
                    </tr>
                    <tr>

                        <td></td>
                        <td class="form-group form-md-line-input has-info">
                            <input type="text" class="form-control" id="Product" name="Product">
                        </td>
                        <td class="form-group form-md-line-input has-info">
                            <input type="text" class="form-control" id="item" name="item">
                        </td>
                        <td class="form-group form-md-line-input has-info">
                            <input class="form-control" id="amount" name="amount" readonly="readonly" />

                        </td>
                        <td class="form-group form-md-line-input has-info">
                            <input type="text" class="form-control" id="DiscountPerItem" value="0" name="DiscountPerItem" />
                        </td>

                        <td><label id="Amount" name="Amount" /></td>


                        <td>
                            <a id="add" class="" aria-label="Left Align">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                            </a>
                        </td>
                    </tr>
                </thead>

                <tbody id="tblPurchaseOD"></tbody>
                <tfoot>
                    <tr>
                        <td colspan="9">Total</td>

                        <td><label id="TotalPrice" name="TotalPrice" /></td>

                        <td></td>
                    </tr>
                </tfoot>
                <tfoot>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="form-actions">
        <button type="button" class="btn blue" id="save"><i class="fa fa-floppy-o"></i> Save</button>
        <a href="~/Purchase/Index" class="btn btn-default"><i class="fa fa-ban"></i> Cancel</a>
    </div>
</form>

@section Scripts{

    <script src="~/js/typeahead.bundle.js"></script>
    <script src="~/js/jquery-ui.js"></script>
    <script>

        var purchasOrder = {
            init: function() {},
            count: 1,
            unitAmount: 0,
            totalPrice: 0,
            totalVat: 0,
            typeId: 0,
            purchaseOrders:[],
            PurchaseOrderDetailList: [],
            ContentInfoJson: [],
            PurchasePaymenJson:[],
            item: [],
            calculateTotal: function () {

                var vatPercent = $('#VAT').text();
                var unitAmount = $('#Amount').text();
                var vatValue = parseFloat(unitAmount);
                var vat = parseFloat(vatPercent) / 100;
                vatValue = vatValue * (vat);
                var total = parseFloat(unitAmount) + vatValue;
                $('#vatValue').text(vatValue);
                $('#totalValue').text(total);
            },

            gridTableEmpty: function() {
                $('#ProductId').val('');
                $('#Product').val('');
                $('#Amount').text('');
                $('#item').val('');
                $('#amount').val('0');
            },
            isNumber:function (n) {
                return !isNaN(parseFloat(n)) && isFinite(n);
            },
            CalculateTotalPriceAndVat: function (totalPrice, totalVat) {
                debugger
                purchasOrder.totalPrice += totalPrice;
                purchasOrder.totalVat += totalVat;
                $('#TotalPrice').text(purchasOrder.totalPrice);
                $('#TotalVat').text(purchasOrder.totalVat);
            },
            add: function () {
                debugger
                var productName = $('#Product').val();
                var productId = $('#ProductId').val();
                var item = $('#item').val();
                var amount = $('#amount').val();
                var unitAmount = $('#Amount').text();
                var DiscountPerItem = $('#DiscountPerItem').val();

                if (productId>0) {

                    var canAdd = true;

                    $.each(purchasOrder.PurchaseOrderDetailList,
                        function (i, v) {
                            if (purchasOrder.PurchaseOrderDetailList[i].ProductId == productId) {
                                alert('Sorry! product Order Exists.');
                                canAdd = false;

                            }

                        });
                    if (!parseInt(item)) {
                        alert('Number of item is inValid!');
                        canAdd = false;
                    }
                    if (!parseInt(amount)) {
                        alert('Amount of item is inValid!');
                        canAdd = false;
                    }
                    if (canAdd) {
                        var data = new Object();
                        //PurchaseDetails
                        data.ProductId = productId;
                        data.Quantity = item;
                        data.UnitPrice = amount;
                        data.DiscountPerItem = DiscountPerItem;

                        purchasOrder.PurchaseOrderDetailList.push(data);

                        var html = '<tr id="' +
                            data.ProductId +
                            '">' +
                            '<td>' +
                            purchasOrder.count +
                            '</td>' +
                            '<td>' +
                            productName +
                            '</td>' +
                            '<td>' +
                            item +
                            '</td>' +
                            '<td>' +
                            amount +
                            '</td>' +
                            '<td>' +
                            DiscountPerItem +
                            '</td>' +

                            '<td>' +
                            unitAmount +
                            '</td>' +

                            '<td><span onclick="Delete(' +
                            data.ProductId +
                            ')"  class="glyphicon glyphicon-minus btn-xs"></a></span></td>';

                        html += '</tr>';

                        $("table#gridTable > tbody").append(html);
                        //purchasOrder.CalculateTotalPriceAndVat(total, vatValue);
                        purchasOrder.gridTableEmpty();
                        purchasOrder.count++;

                    }
                }

            },
            addDocument: function () {

                var files = $("#FileUpload").get(0).files;
                var table = document.getElementById('contentTable');
                var rowCount = table.rows.length;
                if (files) {
                    var canAdd = true;

                    if (canAdd) {
                        var data = new Object();
                        //PurchaseDetails
                        data.rowCount = rowCount;
                        //data.DocumentTypeId = DocumentTypeId;
                        data.UploadFile = files[0];
                        purchasOrder.ContentInfoJson.push(data);

                        var html = '<tr id="' +
                            rowCount +
                            '">' +
                            '<td>' +
                            rowCount +
                            '</td>' +
                            '<td>' +
                            files[0].name +
                            '</td>' +
                            '<td><span onclick="DeleteDocument(' +
                            rowCount +
                            ')"  class="glyphicon glyphicon-minus btn-xs"></a></span></td>';

                        html += '</tr>';

                        $("table#contentTable > tbody").append(html);
                        //purchasOrder.count++;

                    }
                }

            },
            addPayment: function () {

                var PaymentMethod = $('#PaymentMethodId option:selected').text();
                var PaymentMethodId = $('#PaymentMethodId').val();
                var PaidAmount = $("#PaidAmount").val();
                var PaymentDate = $("#PaymentDate").val();
                var table = document.getElementById('payment');
                var rowCount = table.rows.length;
                if (PaymentMethodId > 0) {
                    var canAdd = true;

                    if (canAdd) {
                        var data = new Object();
                        //PurchaseDetails
                        data.rowCount = rowCount;
                        data.PaymentMethodId = PaymentMethodId;
                        data.PaidAmount = PaidAmount;
                        data.PaymentDate = PaymentDate;
                        purchasOrder.PurchasePaymenJson.push(data);

                        var html = '<tr id="' +
                            rowCount +
                            '">' +
                            '<td>' +
                            rowCount +
                            '</td>' +
                            '<td>' +
                            PaymentMethod +
                            '</td>' +
                            '<td>' +
                            PaidAmount +
                            '</td>' +
                            '<td>' +
                            PaymentDate +
                            '</td>' +
                            '<td><span onclick="DeletePayment(' +
                            rowCount +
                            ')"  class="glyphicon glyphicon-minus btn-xs"></a></span></td>';

                        html += '</tr>';

                        $("table#payment > tbody").append(html);
                        //purchasOrder.count++;

                    }
                }

            },
            delete: function (id) {
                // var j = 0;

                for (var key in purchasOrder.PurchaseOrderDetailList) {
                    var value = purchasOrder.PurchaseOrderDetailList[key].ProductId;
                    if (purchasOrder.PurchaseOrderDetailList[key].ProductId == id) {
                       // purchasOrder.CalculateTotalPriceAndVat(-purchasOrder.PurchaseOrderDetailList[key].total, -purchasOrder.PurchaseOrderDetailList[key].vatValue);
                    }
                }
                $.each(purchasOrder.PurchaseOrderDetailList,
                    function (i, v) {
                        if (purchasOrder.PurchaseOrderDetailList[i].ProductId == id) {

                            purchasOrder.PurchaseOrderDetailList.splice(i, 1);

                        }
                        $("tr#" + id).remove().fadeOut();

                    });

            },
            deletePayment: function (id) {

                $.each(purchasOrder.PurchasePaymenJson,
                    function (i, v) {
                        if (purchasOrder.PurchasePaymenJson[i].rowCount == id) {

                            purchasOrder.PurchasePaymenJson.splice(i, 1);

                        }
                        $("tr#" + id).remove().fadeOut();

                    });

            },
            deleteDocument: function (id) {

                $.each(purchasOrder.ContentInfoJson,
                    function (i, v) {
                        if (purchasOrder.ContentInfoJson[i].rowCount == id) {

                            purchasOrder.ContentInfoJson.splice(i, 1);

                        }
                        $("tr#" + id).remove().fadeOut();

                    });

            },
            calculate: function (value) {

                var unitAmount = $('#amount').val();

                if (!purchasOrder.isNumber(unitAmount) || !(purchasOrder.isNumber(value))) {
                    return;
                } else {

                    $("#Amount").text(unitAmount * value);
                    purchasOrder.calculateTotal();
                }

            },
            calculateUnitPrice: function (value) {
                var qty = $('#item').val();
                if (!purchasOrder.isNumber(qty) || !(purchasOrder.isNumber(value))) {

                    return;
                } else {
                    $("#Amount").text(value / qty);
                }

            },
            Save: function () {
                debugger
                var VendorId = $('#VendorId').val();
                var PurchaseInvoice = $('#PurchaseInvoice').val();
                var VoucherNo = $('#VoucherNo').val();
                var DiscountOnTotal = $('#DiscountOnTotal').val();


                //Bind Data for Purchase
                var data = new FormData();

                for (var i = 0; i < purchasOrder.PurchaseOrderDetailList.length; i++) {
                    data.append('PurchaseOrderDetailList[' + i + '].ProductId', purchasOrder.PurchaseOrderDetailList[i].ProductId);
                    data.append('PurchaseOrderDetailList[' + i + '].Qty', purchasOrder.PurchaseOrderDetailList[i].Quantity);
                    data.append('PurchaseOrderDetailList[' + i + '].Amount', purchasOrder.PurchaseOrderDetailList[i].UnitPrice);
                    data.append('PurchaseOrderDetailList[' + i + '].DiscountPerItem', purchasOrder.PurchaseOrderDetailList[i].DiscountPerItem);

                }
                //TODO
                for (var i = 0; i < purchasOrder.ContentInfoJson.length; i++) {
                    data.append('ContentInfoJson[' + i + '].DocumentTypeId',
                        1);
                    data.append('ContentInfoJson[' + i + '].UploadFile', purchasOrder.ContentInfoJson[i].UploadFile);
                }
                //TODO
                for (var i = 0; i < purchasOrder.PurchasePaymenJson.length; i++) {
                    data.append('PurchasePaymenJson[' + i + '].PaymentMethodId', purchasOrder.PurchasePaymenJson[i].PaymentMethodId);
                    data.append('PurchasePaymenJson[' + i + '].PaidAmount', purchasOrder.PurchasePaymenJson[i].PaidAmount);
                    data.append('PurchasePaymenJson[' + i + '].PaymentDate', purchasOrder.PurchasePaymenJson[i].PaymentDate);
                }
                data.append("PurchaseInvoice", PurchaseInvoice);
                data.append("VoucherNo", VoucherNo);
                data.append("DiscountOnTotal", DiscountOnTotal);
                data.append("VendorId", VendorId);

                //data.append("__RequestVerificationToken", $("input[name=__RequestVerificationToken]").val());//.attr("name","__RequestVerificationToken").val());//TODO

                $.ajax({
                    url: '@Url.Action("Create", "Purchase")',
                    data: data,
                    type: "POST",
                    processData: false,
                    contentType: false,
                    dataType: "json",
                    beforeSend: function () {
                        $("#loading").show();
                    },
                    success: function (result) {
                        $("#loading").hide();

                        if (result == false) {
                            alert("Please add atleast on purchase Details");
                        }
                        else {
                            window.location.href = '@Url.Action("Index", "Purchase")';
                        }
                    },
                    error: function (x, e) {
                        $("#loading").hide();
                        alert('error');
                    }
                });
            },
            product : {
                init: function () { },
                productAutoComplete: function () {
                    var materialforrequsition = {
                        Initialize: function () {
                            materialforrequsition.Typehead();
                        },

                        Typehead: function () {
                            $('#Product').typeahead('destroy');
                            $('#Product').typeahead({
                                    hint: true,
                                    highlight: true,
                                    minLength: 2,
                                },
                                {
                                    items: 8,
                                    name: 'Product',
                                    displayKey: function (s) {
                                        return s.name;
                                    },
                                    property: "ProductId",
                                    source: function (strmaterial, process) {
                                        var url = '@Url.Content("~/Products/PurchaseProductAutoComplete")';
                                        return $.getJSON(url, { filterText: $("#Product").val() }, function (Data) {

                                            return process(Data);
                                        });
                                    },
                                    updater: function (item) {
                                        return item.name;
                                    }
                                }).on('typeahead:selected', function (obj, datum) {

                                    $("#ProductId").val(datum.id);
                                    $('#Amount').text(datum.unitPrice);
                                     $('#item').val('1');
                                    $('#amount').val(datum.unitPrice);
                                    $('#SupplementaryDutyPercent').val(datum.supplimentaryDuty);
                                    if (purchasOrder.typeId == 3) {
                                        $('#VAT').text('0');
                                    } else {
                                        $('#VAT').text(datum.vat);
                                    }
                                  // purchasOrder.unitAmount = datum.unitPrice;
                                   purchasOrder.calculateTotal();
                            });
                            $("#Product").focus();

                        }
                    }
                    materialforrequsition.Initialize();
                }
            }
        }

        $(document).ready(function() {
            $('#add').click(function() {
                purchasOrder.add();
            });
            $('#addDocument').click(function() {
                purchasOrder.addDocument();
            });
            $('#addPayment').click(function() {
                purchasOrder.addPayment();
            });

            $('#save').click(function () {
                purchasOrder.Save();
            });

            purchasOrder.product.productAutoComplete();


            $("#PaymentDate").datepicker();
            $("#PaymentDate").datepicker('option', 'dateFormat', 'dd M, yy');




        });

        function Delete(id) {
            purchasOrder.delete(id);
        }
       function DeleteDocument(id) {
            purchasOrder.deleteDocument(id);
        }
        function DeletePayment(id) {
            purchasOrder.deletePayment(id);
        }

        $("#item").keyup(function () {
            var that = this,
            numberOfItem = $(this).val();
            purchasOrder.calculate(numberOfItem);

        });

        $("#amount").keyup(function () {
            var that = this,
                amount = $(this).val();
            purchasOrder.calculateUnitPrice(amount);

        });


    </script>

}