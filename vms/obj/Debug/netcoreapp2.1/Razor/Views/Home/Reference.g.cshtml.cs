#pragma checksum "E:\personal\New folder\MoneyMoney\vms\Views\Home\Reference.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b743e501b62ee0712a2afbec523fb855fab4077d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Reference), @"mvc.1.0.view", @"/Views/Home/Reference.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Reference.cshtml", typeof(AspNetCore.Views_Home_Reference))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\personal\New folder\MoneyMoney\vms\Views\_ViewImports.cshtml"
using vms;

#line default
#line hidden
#line 2 "E:\personal\New folder\MoneyMoney\vms\Views\_ViewImports.cshtml"
using vms.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b743e501b62ee0712a2afbec523fb855fab4077d", @"/Views/Home/Reference.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c551d0fb6d1cb6e33accdc0872f5172ad460dc03", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Reference : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("role", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline margin-bottom-40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal margin-bottom-40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("margin-bottom-40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\personal\New folder\MoneyMoney\vms\Views\Home\Reference.cshtml"
  
    ViewData["Title"] = "Reference";
    Layout = "_Layout";

#line default
#line hidden
            BeginContext(72, 2119, true);
            WriteLiteral(@"
<h2>Reference</h2>

<h1 class=""page-title"">
    Material Design Form Controls
    <small>material design bootstrap inputs, input groups, custom checkboxes and radio controls and more</small>
</h1>
<!-- END PAGE TITLE-->
<!-- END PAGE HEADER-->
<div class=""row"">
    <div class=""col-md-6 "">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-red-sunglo"">
                    <i class=""icon-settings font-red-sunglo""></i>
                    <span class=""caption-subject bold uppercase""> Line Inputs</span>
                </div>
                <div class=""actions"">
                    <div class=""btn-group"">
                        <a class=""btn btn-sm green dropdown-toggle"" href=""javascript:;"" data-toggle=""dropdown"">
                            Actions
                            <i class=""fa fa-angle-down""></i>
                        </a>
                        <ul class=");
            WriteLiteral(@"""dropdown-menu pull-right"">
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-pencil""></i> Edit
                                </a>
                            </li>
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-trash-o""></i> Delete
                                </a>
                            </li>
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-ban""></i> Ban
                                </a>
                            </li>
                            <li class=""divider""> </li>
                            <li>
                                <a href=""javascript:;""> Make admin </a>
                            </li>
                        </ul>
                    </div>
                </div>
          ");
            WriteLiteral("  </div>\r\n            <div class=\"portlet-body form\">\r\n                ");
            EndContext();
            BeginContext(2191, 4817, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "61a21b2f2de84e1fa65c1123358acc81", async() => {
                BeginContext(2209, 2232, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""form-group form-md-line-input"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Enter your name"">
                            <label for=""form_control_1"">Regular input</label>
                            <span class=""help-block"">Some help goes here...</span>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Enter your email"">
                            <label for=""form_control_1"">Input with help</label>
                            <span class=""help-block"">Some help goes here...</span>
                        </div>
                        <div class=""form-group form-md-line-input has-success"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Success state"">
       ");
                WriteLiteral(@"                     <label for=""form_control_1"">Success input</label>
                        </div>
                        <div class=""form-group form-md-line-input has-warning"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Warning state"">
                            <label for=""form_control_1"">Warning input</label>
                        </div>
                        <div class=""form-group form-md-line-input has-error"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Error state"">
                            <label for=""form_control_1"">Error input</label>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Info state"">
                            <label for=""form_control_1"">Info input</label>
                        </div>
     ");
                WriteLiteral("                   <div class=\"form-group form-md-line-input has-info\">\r\n                            <select class=\"form-control\" id=\"form_control_1\">\r\n                                ");
                EndContext();
                BeginContext(4441, 26, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "68c24466e2f546d2a61d72a8b6d6a39b", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4467, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(4501, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "07643ffcf843441ba72c188f77b0292f", async() => {
                    BeginContext(4519, 8, true);
                    WriteLiteral("Option 1");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4536, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(4570, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "17d83d6cffbc4121b9289e0a82550e7b", async() => {
                    BeginContext(4588, 8, true);
                    WriteLiteral("Option 2");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4605, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(4639, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0b23860646c2496cb2fd138b7483fe5e", async() => {
                    BeginContext(4657, 8, true);
                    WriteLiteral("Option 3");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4674, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(4708, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be669df188504f7bb6dafbfa67dd13e2", async() => {
                    BeginContext(4726, 8, true);
                    WriteLiteral("Option 4");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4743, 2258, true);
                WriteLiteral(@"
                            </select>
                            <label for=""form_control_1"">Dropdown sample</label>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <textarea class=""form-control"" rows=""3"" placeholder=""Enter more text""></textarea>
                            <label for=""form_control_1"">Textarea input</label>
                        </div>
                        <div class=""form-group form-md-line-input has-error"">
                            <input type=""text"" class=""form-control"" disabled id=""form_control_1"" placeholder=""Disable"">
                            <label for=""form_control_1"">Disabled</label>
                        </div>
                        <div class=""form-group form-md-line-input has-error"">
                            <input type=""text"" class=""form-control"" readonly value=""You can't edit this"" id=""form_control_1"">
                            <label for=""form_control_1"">Readonly</");
                WriteLiteral(@"label>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <div class=""form-control form-control-static""> email@example.com </div>
                            <label for=""form_control_1"">Static Control</label>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <input type=""text"" class=""form-control input-sm"" id=""form_control_1"" placeholder="".input-sm"">
                            <label for=""form_control_1"">Small input</label>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <input type=""text"" class=""form-control input-lg"" id=""form_control_1"" placeholder="".input-lg"">
                            <label for=""form_control_1"">Large input</label>
                        </div>
                    </div>
                    <div class=""form-actions noborder""");
                WriteLiteral(">\r\n                        <button type=\"button\" class=\"btn blue\">Submit</button>\r\n                        <button type=\"button\" class=\"btn default\">Cancel</button>\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7008, 1030, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-red-sunglo"">
                    <span class=""caption-subject bold uppercase""> Input Groups & Icons</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""></i>
                    </a>
                </div>
            </div>
            <div class=""portlet-body form"">
          ");
            WriteLiteral("      ");
            EndContext();
            BeginContext(8038, 14862, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d9554da28c6a477b976961c5bb00f999", async() => {
                BeginContext(8056, 14837, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""row"">
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-success"">
                                    <div class=""input-icon"">
                                        <input type=""text"" class=""form-control"" placeholder=""Left icon"">
                                        <label for=""form_control_1"">Regular input</label>
                                        <span class=""help-block"">Some help goes here...</span>
                                        <i class=""fa fa-bell-o""></i>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-warning"">
                                    <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder");
                WriteLiteral(@"=""Warning state"">
                                    <label for=""form_control_1"">Warning input</label>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-error"">
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" placeholder=""Email Address"">
                                        <label for=""form_control_1"">Input Group</label>
                                        <span class=""input-group-addon"">
                                            <i class=""fa fa-envelope""></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col-md-");
                WriteLiteral(@"4"">
                                <div class=""form-group form-md-line-input has-success"">
                                    <div class=""input-icon"">
                                        <input type=""text"" class=""form-control"" placeholder=""Left icon"">
                                        <label for=""form_control_1"">Regular input</label>
                                        <span class=""help-block"">Some help goes here...</span>
                                        <i class=""fa fa-bell-o""></i>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-error"">
                                    <div class=""input-group"">
                                        <input type=""text"" class=""form-control"" placeholder=""Email Address"">
                                        <span class=""help-block"">Some hel");
                WriteLiteral(@"p goes here...</span>
                                        <label for=""form_control_1"">Input Group1</label>
                                        <span class=""input-group-addon"">
                                            <i class=""fa fa-envelope""></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-error"">
                                    <div class=""input-group"">
                                        <div class=""input-group-control"">
                                            <input type=""text"" class=""form-control"" placeholder=""Placeholder"">
                                            <label for=""form_control_1"">Input Group</label>
                                        </div>
                                        <span class=""input-gro");
                WriteLiteral(@"up-btn btn-right"">
                                            <button type=""button"" class=""btn green-haze dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false"">
                                                Action
                                                <i class=""fa fa-angle-down""></i>
                                            </button>
                                            <ul class=""dropdown-menu pull-right"" role=""menu"">
                                                <li>
                                                    <a href=""javascript:;"">Action</a>
                                                </li>
                                                <li>
                                                    <a href=""javascript:;"">Another action</a>
                                                </li>
                                                <li>
                                                    <a href=""javascript:;"">Something else here</a>
          ");
                WriteLiteral(@"                                      </li>
                                                <li class=""divider""> </li>
                                                <li>
                                                    <a href=""javascript:;"">Separated link</a>
                                                </li>
                                            </ul>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-success"">
                            <div class=""input-icon right"">
                                <input type=""text"" class=""form-control"" placeholder=""Right icon"">
                                <label for=""form_control_1"">Input With Hint</label>
                                <span class=""help-block"">Some help goes here...</span>
                                <i");
                WriteLiteral(@" class=""icon-user""></i>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">
                                    <i class=""fa fa-envelope""></i>
                                </span>
                                <input type=""text"" class=""form-control"" placeholder=""Email Address"">
                                <label for=""form_control_1"">Input Group</label>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-error"">
                            <div class=""input-group"">
                                <input type=""text"" class=""form-control"" placeholder=""Email Address"">
                                <label for=""form_control_1"">Input Group</label>
                                <span class=""input-grou");
                WriteLiteral(@"p-addon"">
                                    <i class=""fa fa-envelope""></i>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-warning"">
                            <div class=""input-group"">
                                <span class=""input-group-addon"">$</span>
                                <input type=""text"" class=""form-control"">
                                <span class=""help-block"">Some help goes here...</span>
                                <span class=""input-group-addon"">.00</span>
                                <label for=""form_control_1"">Input Group</label>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-warning"">
                            <div class=""input-group"">
                                <span class=""input-group-btn btn-left"">
                              ");
                WriteLiteral(@"      <button class=""btn blue-madison"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control edited"" placeholder=""Placeholder"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-error"">
                            <div class=""input-group"">
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control"" placeholder=""Placeholder"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                                <span class=""input-group-btn btn-right"">
                                    <butt");
                WriteLiteral(@"on type=""button"" class=""btn green-haze dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false"">
                                        Action
                                        <i class=""fa fa-angle-down""></i>
                                    </button>
                                    <ul class=""dropdown-menu pull-right"" role=""menu"">
                                        <li>
                                            <a href=""javascript:;"">Action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Another action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Something else here</a>
                                        </li>
                                        <li class=""divider""> </li>
                                        <li>
              ");
                WriteLiteral(@"                              <a href=""javascript:;"">Separated link</a>
                                        </li>
                                    </ul>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <div class=""input-group"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn red-intense"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control"" placeholder=""Input group"">
                                    <span class=""help-block"">Some help goes here...</span>
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                     ");
                WriteLiteral(@"           <span class=""input-group-btn btn-right"">
                                    <button type=""button"" class=""btn btn-default dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false"">
                                        Action
                                        <i class=""fa fa-angle-down""></i>
                                    </button>
                                    <ul class=""dropdown-menu pull-right"" role=""menu"">
                                        <li>
                                            <a href=""javascript:;"">Action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Another action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Something else here</a>
                                        </li>
                                 ");
                WriteLiteral(@"       <li class=""divider""> </li>
                                        <li>
                                            <a href=""javascript:;"">Separated link</a>
                                        </li>
                                    </ul>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <div class=""input-group input-group-sm"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn red-intense"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control input-sm"" placeholder="".input-sm"">
                                    <label for=""form_control_1"">Small Input Group</label>
                              ");
                WriteLiteral(@"  </div>
                                <span class=""input-group-btn btn-right"">
                                    <button class=""btn green-haze"" type=""button"">Go!</button>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <div class=""input-group input-group-lg"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn red-intense"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control input-lg"" placeholder="".input-lg"">
                                    <label for=""form_control_1"">Large Input Group</label>
                                </div>
                                <span class=""input-group-btn btn-righ");
                WriteLiteral(@"t"">
                                    <button class=""btn green-haze"" type=""button"">Go!</button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class=""form-actions noborder"">
                        <button type=""button"" class=""btn blue"">Submit</button>
                        <button type=""button"" class=""btn default"">Cancel</button>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(22900, 1891, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-red-sunglo"">
                    <i class=""icon-check font-red-sunglo""></i>
                    <span class=""caption-subject bold uppercase""> Checkboxes</span>
                </div>
                <div class=""actions"">
                    <div class=""btn-group"">
                        <a class=""btn btn-sm red dropdown-toggle"" href=""javascript:;"" data-toggle=""dropdown"">
                            Settings
                            <i class=""fa fa-angle-down""></i>
                        </a>
                        <ul class=""dropdown-menu pull-right"">
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-pencil""></i> Edit
                                </a>");
            WriteLiteral(@"
                            </li>
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-trash-o""></i> Delete
                                </a>
                            </li>
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-ban""></i> Ban
                                </a>
                            </li>
                            <li class=""divider""> </li>
                            <li>
                                <a href=""javascript:;""> Make admin </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class=""portlet-body form"">
                ");
            EndContext();
            BeginContext(24791, 7663, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "508332162e3043d0ac541c263173a770", async() => {
                BeginContext(24809, 7638, true);
                WriteLiteral(@"
                    <div class=""form-group form-md-checkboxes"">
                        <label>Checkboxes</label>
                        <div class=""md-checkbox-list"">
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox1"" class=""md-check"">
                                <label for=""checkbox1"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox2"" class=""md-check"" checked>
                                <label for=""checkbox2"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></sp");
                WriteLiteral(@"an> Option 2
                                </label>
                            </div>
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox3"" class=""md-check"">
                                <label for=""checkbox3"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox4"" disabled class=""md-check"">
                                <label for=""checkbox4"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Disabled
                                </label>
                         ");
                WriteLiteral(@"   </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-checkboxes"">
                        <label>Inline Checkboxes</label>
                        <div class=""md-checkbox-inline"">
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox6"" class=""md-check"">
                                <label for=""checkbox6"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox7"" class=""md-check"" checked>
                                <label for=""checkbox7"">
                                    <span></span>
                                    <span cla");
                WriteLiteral(@"ss=""check""></span>
                                    <span class=""box""></span> Option 2
                                </label>
                            </div>
                            <div class=""md-checkbox"">
                                <input type=""checkbox"" id=""checkbox8"" class=""md-check"">
                                <label for=""checkbox8"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-checkboxes"">
                        <label>Checkboxes</label>
                        <div class=""md-checkbox-list"">
                            <div class=""md-checkbox has-success"">
                                <input type=""checkbox"" id=""checkbox9"" class=""md-check"">");
                WriteLiteral(@"
                                <label for=""checkbox9"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-checkbox has-error"">
                                <input type=""checkbox"" id=""checkbox10"" class=""md-check"" checked>
                                <label for=""checkbox10"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 2
                                </label>
                            </div>
                            <div class=""md-checkbox has-warning"">
                                <input type=""checkbox"" id=""checkbox11"" class=""md-check"">
                                <label for=""checkbox11"">");
                WriteLiteral(@"
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                            <div class=""md-checkbox has-info"">
                                <input type=""checkbox"" id=""checkbox12"" disabled class=""md-check"">
                                <label for=""checkbox12"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Disabled
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-checkboxes"">
                        <label>Inline Checkboxes</label>
                        <div class=""md-checkbox-inline"">
                            ");
                WriteLiteral(@"<div class=""md-checkbox has-success"">
                                <input type=""checkbox"" id=""checkbox14"" class=""md-check"">
                                <label for=""checkbox14"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-checkbox has-error"">
                                <input type=""checkbox"" id=""checkbox15"" class=""md-check"" checked>
                                <label for=""checkbox15"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 2
                                </label>
                            </div>
                            <div class=""md-checkbox has-info"">
                    ");
                WriteLiteral(@"            <input type=""checkbox"" id=""checkbox16"" class=""md-check"">
                                <label for=""checkbox16"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(32454, 1929, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
    </div>
    <div class=""col-md-6 "">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-green"">
                    <i class=""icon-pin font-green""></i>
                    <span class=""caption-subject bold uppercase""> Floating Labels</span>
                </div>
                <div class=""actions"">
                    <div class=""btn-group"">
                        <a class=""btn btn-sm default dropdown-toggle"" href=""javascript:;"" data-toggle=""dropdown"">
                            Settings
                            <i class=""fa fa-angle-down""></i>
                        </a>
                        <ul class=""dropdown-menu pull-right"">
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-pencil""></i> Edit");
            WriteLiteral(@"
                                </a>
                            </li>
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-trash-o""></i> Delete
                                </a>
                            </li>
                            <li>
                                <a href=""javascript:;"">
                                    <i class=""fa fa-ban""></i> Ban
                                </a>
                            </li>
                            <li class=""divider""> </li>
                            <li>
                                <a href=""javascript:;""> Make admin </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class=""portlet-body form"">
                ");
            EndContext();
            BeginContext(34383, 4877, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "49f70adfa4494a4985d6950b0b506e42", async() => {
                BeginContext(34401, 2245, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""form-group form-md-line-input form-md-floating-label"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"" value=""test"">
                            <label for=""form_control_1"">Regular input</label>
                            <span class=""help-block"">Some help goes here...</span>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"">
                            <label for=""form_control_1"">Input with help</label>
                            <span class=""help-block"">Some help goes here...</span>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-success"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"">
              ");
                WriteLiteral(@"              <label for=""form_control_1"">Success input</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-warning"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"">
                            <label for=""form_control_1"">Warning input</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-error"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"">
                            <label for=""form_control_1"">Error input</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-info"">
                            <input type=""text"" class=""form-control"" id=""form_control_1"">
                            <label for=""form_control_1"">Info input</label>
                        </div>
                      ");
                WriteLiteral("  <div class=\"form-group form-md-line-input form-md-floating-label has-info\">\r\n                            <select class=\"form-control edited\" id=\"form_control_1\">\r\n                                ");
                EndContext();
                BeginContext(36646, 26, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "51bb7feaf25c4c5db1a48fc725902049", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36672, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(36706, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3ad34ce1842945b48dcedf5dbb2495e0", async() => {
                    BeginContext(36733, 8, true);
                    WriteLiteral("Option 1");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36750, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(36784, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b30af11206d14968bb3502c95640c14b", async() => {
                    BeginContext(36802, 8, true);
                    WriteLiteral("Option 2");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36819, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(36853, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "320d0917ddfc41b2ad4df70801413957", async() => {
                    BeginContext(36871, 8, true);
                    WriteLiteral("Option 3");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36888, 34, true);
                WriteLiteral("\r\n                                ");
                EndContext();
                BeginContext(36922, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fd7134a848b44bec90b45a69c547fc58", async() => {
                    BeginContext(36940, 8, true);
                    WriteLiteral("Option 4");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(36957, 2296, true);
                WriteLiteral(@"
                            </select>
                            <label for=""form_control_1"">Dropdown sample</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label"">
                            <textarea class=""form-control"" rows=""3""></textarea>
                            <label for=""form_control_1"">Textarea input</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-error"">
                            <input type=""text"" class=""form-control"" disabled id=""form_control_1"">
                            <label for=""form_control_1"">Disabled</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-error"">
                            <input type=""text"" class=""form-control"" readonly value=""You can't edit this"" id=""form_control_1"">
                            <label for=""form_cont");
                WriteLiteral(@"rol_1"">Readonly</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label"">
                            <div class=""form-control form-control-static""> email@example.com </div>
                            <label for=""form_control_1"">Static Control</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-info"">
                            <input type=""text"" class=""form-control input-sm"" id=""form_control_1"">
                            <label for=""form_control_1"">Small input</label>
                        </div>
                        <div class=""form-group form-md-line-input form-md-floating-label has-info"">
                            <input type=""text"" class=""form-control input-lg"" id=""form_control_1"">
                            <label for=""form_control_1"">Large input</label>
                        </div>
                    </div>
                ");
                WriteLiteral("    <div class=\"form-actions noborder\">\r\n                        <button type=\"button\" class=\"btn blue\">Submit</button>\r\n                        <button type=\"button\" class=\"btn default\">Cancel</button>\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(39260, 1171, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-red-sunglo"">
                    <span class=""caption-subject bold uppercase"">Input Groups & Icons</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only btn-default fullscreen"" href=""javascript:");
            WriteLiteral(";\" data-original-title=\"\" title=\"\"> </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"portlet-body form\">\r\n                ");
            EndContext();
            BeginContext(40431, 11772, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7aeda03a2dec41b49722d63b63755ac2", async() => {
                BeginContext(40449, 11747, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""row"">
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-success form-md-floating-label"">
                                    <div class=""input-icon"">
                                        <input type=""text"" class=""form-control"">
                                        <label for=""form_control_1"">Regular input</label>
                                        <span class=""help-block"">Some help goes here...</span>
                                        <i class=""fa fa-bell-o""></i>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input has-warning form-md-floating-label"">
                                    <div class=""input-group"">
                      ");
                WriteLiteral(@"                  <span class=""input-group-btn btn-left"">
                                            <button class=""btn blue-madison"" type=""button"">Go!</button>
                                        </span>
                                        <div class=""input-group-control"">
                                            <input type=""text"" class=""form-control edited"" value=""some value"">
                                            <label for=""form_control_1"">Input Group</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group form-md-line-input form-md-floating-label"">
                                    <input type=""text"" class=""form-control"" id=""form_control_1"">
                                    <label for=""form_control_1"">Regular input</label>
                          ");
                WriteLiteral(@"          <span class=""help-block"">Some help goes here...</span>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-success form-md-floating-label"">
                            <div class=""input-icon"">
                                <input type=""text"" class=""form-control"">
                                <label for=""form_control_1"">Regular input</label>
                                <span class=""help-block"">Some help goes here...</span>
                                <i class=""fa fa-bell-o""></i>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-success form-md-floating-label"">
                            <div class=""input-icon right"">
                                <input type=""text"" class=""form-control"">
                                <label for=""form_control_1"">Regular input</labe");
                WriteLiteral(@"l>
                                <span class=""help-block"">Some help goes here...</span>
                                <i class=""icon-user""></i>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info form-md-floating-label"">
                            <div class=""input-group left-addon"">
                                <span class=""input-group-addon"">
                                    <i class=""fa fa-envelope""></i>
                                </span>
                                <input type=""text"" class=""form-control"">
                                <label for=""form_control_1"">Input Group</label>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-error form-md-floating-label"">
                            <div class=""input-group right-addon"">
                                <input type=""text"" class=""form-control""");
                WriteLiteral(@">
                                <label for=""form_control_1"">Input Group</label>
                                <span class=""input-group-addon"">
                                    <i class=""fa fa-envelope""></i>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-warning form-md-floating-label"">
                            <div class=""input-group left-addon right-addon"">
                                <span class=""input-group-addon"">$</span>
                                <input type=""text"" class=""form-control"">
                                <span class=""input-group-addon"">.00</span>
                                <label for=""form_control_1"">Input Group</label>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-warning form-md-floating-label"">
                            <div class");
                WriteLiteral(@"=""input-group"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn blue-madison"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control edited"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-error form-md-floating-label"">
                            <div class=""input-group"">
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                        ");
                WriteLiteral(@"        <span class=""input-group-btn btn-right"">
                                    <button type=""button"" class=""btn green-haze dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false"">
                                        Action
                                        <i class=""fa fa-angle-down""></i>
                                    </button>
                                    <ul class=""dropdown-menu pull-right"" role=""menu"">
                                        <li>
                                            <a href=""javascript:;"">Action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Another action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Something else here</a>
                                        </li>
                                     ");
                WriteLiteral(@"   <li class=""divider""> </li>
                                        <li>
                                            <a href=""javascript:;"">Separated link</a>
                                        </li>
                                    </ul>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info form-md-floating-label"">
                            <div class=""input-group"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn red-intense"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                         ");
                WriteLiteral(@"       <span class=""input-group-btn btn-right"">
                                    <button type=""button"" class=""btn btn-default dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false"">
                                        Action
                                        <i class=""fa fa-angle-down""></i>
                                    </button>
                                    <ul class=""dropdown-menu pull-right"" role=""menu"">
                                        <li>
                                            <a href=""javascript:;"">Action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Another action</a>
                                        </li>
                                        <li>
                                            <a href=""javascript:;"">Something else here</a>
                                        </li>
                                     ");
                WriteLiteral(@"   <li class=""divider""> </li>
                                        <li>
                                            <a href=""javascript:;"">Separated link</a>
                                        </li>
                                    </ul>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info form-md-floating-label"">
                            <div class=""input-group input-group-sm"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn red-intense"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control input-sm"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
 ");
                WriteLiteral(@"                               <span class=""input-group-btn btn-right"">
                                    <button class=""btn green-haze"" type=""button"">Go!</button>
                                </span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info form-md-floating-label"">
                            <div class=""input-group input-group-lg"">
                                <span class=""input-group-btn btn-left"">
                                    <button class=""btn red-intense"" type=""button"">Go!</button>
                                </span>
                                <div class=""input-group-control"">
                                    <input type=""text"" class=""form-control input-lg"">
                                    <label for=""form_control_1"">Input Group</label>
                                </div>
                                <span class=""input-group-btn btn-right"">
             ");
                WriteLiteral(@"                       <button class=""btn green-haze"" type=""button"">Go!</button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class=""form-actions noborder"">
                        <button type=""button"" class=""btn blue"">Submit</button>
                        <button type=""button"" class=""btn default"">Cancel</button>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(52203, 1221, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-red-sunglo"">
                    <i class=""icon-drop font-red-sunglo""></i>
                    <span class=""caption-subject bold uppercase""> Radios</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""></i>
                    </a>
                    <a class=""btn btn-circle btn-i");
            WriteLiteral("con-only btn-default fullscreen\" href=\"javascript:;\" data-original-title=\"\" title=\"\"> </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"portlet-body form\">\r\n                ");
            EndContext();
            BeginContext(53424, 7673, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8f5f61fab42440fbab721671bbd63b75", async() => {
                BeginContext(53442, 7648, true);
                WriteLiteral(@"
                    <div class=""form-group form-md-radios"">
                        <label>Checkboxes</label>
                        <div class=""md-radio-list"">
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio1"" name=""radio1"" class=""md-radiobtn"">
                                <label for=""radio1"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio2"" name=""radio1"" class=""md-radiobtn"" checked>
                                <label for=""radio2"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""><");
                WriteLiteral(@"/span> Option 2
                                </label>
                            </div>
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio3"" name=""radio1"" class=""md-radiobtn"">
                                <label for=""radio3"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio5"" name=""radio1"" disabled class=""md-radiobtn"">
                                <label for=""radio5"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Disabled
                                </label>
            ");
                WriteLiteral(@"                </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-radios"">
                        <label>Checkboxes</label>
                        <div class=""md-radio-inline"">
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio6"" name=""radio2"" class=""md-radiobtn"">
                                <label for=""radio6"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio7"" name=""radio2"" class=""md-radiobtn"" checked>
                                <label for=""radio7"">
                                    <span></span>
                                    ");
                WriteLiteral(@"<span class=""check""></span>
                                    <span class=""box""></span> Option 2
                                </label>
                            </div>
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio8"" name=""radio2"" class=""md-radiobtn"">
                                <label for=""radio8"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-radios"">
                        <label>Checkboxes</label>
                        <div class=""md-radio-list"">
                            <div class=""md-radio"">
                                <input type=""radio"" id=""radio9"" name=""radio1"" class=""md-radiobtn");
                WriteLiteral(@""">
                                <label for=""radio9"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-radio has-error"">
                                <input type=""radio"" id=""radio10"" name=""radio1"" class=""md-radiobtn"" checked>
                                <label for=""radio10"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 2
                                </label>
                            </div>
                            <div class=""md-radio has-warning"">
                                <input type=""radio"" id=""radio11"" name=""radio1"" class=""md-radiobtn"">
                                <label for=");
                WriteLiteral(@"""radio11"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                            <div class=""md-radio has-success"">
                                <input type=""radio"" id=""radio13"" name=""radio1"" disabled class=""md-radiobtn"">
                                <label for=""radio13"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Disabled
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-radios"">
                        <label>Checkboxes</label>
                        <div class=""md-radio-inline"">
                        ");
                WriteLiteral(@"    <div class=""md-radio"">
                                <input type=""radio"" id=""radio14"" name=""radio2"" class=""md-radiobtn"">
                                <label for=""radio14"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 1
                                </label>
                            </div>
                            <div class=""md-radio has-error"">
                                <input type=""radio"" id=""radio15"" name=""radio2"" class=""md-radiobtn"" checked>
                                <label for=""radio15"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 2
                                </label>
                            </div>
                            <div class=""md-radio has-warning"">
                  ");
                WriteLiteral(@"              <input type=""radio"" id=""radio16"" name=""radio2"" class=""md-radiobtn"">
                                <label for=""radio16"">
                                    <span></span>
                                    <span class=""check""></span>
                                    <span class=""box""></span> Option 3
                                </label>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(61097, 1302, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
    </div>
</div>
<div class=""row"">
    <div class=""col-md-12"">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-green-haze"">
                    <i class=""icon-settings font-green-haze""></i>
                    <span class=""caption-subject bold uppercase""> Horizontal Form</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""><");
            WriteLiteral(@"/i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only btn-default fullscreen"" href=""javascript:;"" data-original-title="""" title=""""> </a>
                </div>
            </div>
            <div class=""portlet-body form"">
                ");
            EndContext();
            BeginContext(62399, 6998, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ecf7d6befa774456a4a5873fefb8cb74", async() => {
                BeginContext(62441, 2999, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Regular input</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Enter your name"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Input with hint</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Enter your email"">
                                <div class=""form-control-focus""> </div>
                                <span class=""hel");
                WriteLiteral(@"p-block"">Some help goes here...</span>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-success"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Success Input</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Success state"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-warning"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Warning Input</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Warning state"">
                                <div class=");
                WriteLiteral(@"""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-error"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Error State</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Error state"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Dropdown Input</label>
                            <div class=""col-md-10"">
                                <select class=""form-control"" id=""form_control_1"">
                                    ");
                EndContext();
                BeginContext(65440, 26, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "763af2aead3443f0b11bdbdf139b193c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(65466, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(65504, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8248a63a163b4748a72fbe40dcaf0198", async() => {
                    BeginContext(65521, 8, true);
                    WriteLiteral("Option 1");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(65538, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(65576, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "52a198eeb02d40019ccd7b8e1cef72c0", async() => {
                    BeginContext(65593, 8, true);
                    WriteLiteral("Option 2");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(65610, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(65648, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2b4fa64454e441a8a8b9350075977c16", async() => {
                    BeginContext(65665, 8, true);
                    WriteLiteral("Option 3");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(65682, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(65720, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96b665df899a4a5abbc8bb26d59c96c8", async() => {
                    BeginContext(65737, 8, true);
                    WriteLiteral("Option 4");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(65754, 3636, true);
                WriteLiteral(@"
                                </select>
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-success"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Textarea</label>
                            <div class=""col-md-10"">
                                <textarea class=""form-control"" rows=""3"" placeholder=""Enter more text""></textarea>
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Disabled</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" disabled id=""form_control_1"" placeholder=""Pl");
                WriteLiteral(@"aceholder..."">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Readonly</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control"" readonly value=""Some value"" id=""form_control_1"" placeholder=""Placeholder..."">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Readonly</label>
                            <div class=""col-md-10"">
                                <div class=""form-control form-control-static""> email@example.com </div>
                ");
                WriteLiteral(@"                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Small</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control input-sm"" id=""form_control_1"" placeholder="".input-sm"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Large</label>
                            <div class=""col-md-10"">
                                <input type=""text"" class=""form-control input-lg"" id=""form_control_1"" placeholder="".input-lg"">
                                <div class=""form-control");
                WriteLiteral(@"-focus""> </div>
                            </div>
                        </div>
                    </div>
                    <div class=""form-actions"">
                        <div class=""row"">
                            <div class=""col-md-offset-2 col-md-10"">
                                <button type=""button"" class=""btn default"">Cancel</button>
                                <button type=""button"" class=""btn blue"">Submit</button>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(69397, 1236, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-green-haze"">
                    <i class=""icon-settings font-green-haze""></i>
                    <span class=""caption-subject bold uppercase""> Checkbox & Radios</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""></i>
                    </a>
                    <a class=""btn b");
            WriteLiteral("tn-circle btn-icon-only btn-default fullscreen\" href=\"javascript:;\" data-original-title=\"\" title=\"\"> </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"portlet-body form\">\r\n                ");
            EndContext();
            BeginContext(70633, 8732, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96d3084b6f4f4a37b91c21f9379cade7", async() => {
                BeginContext(70675, 8683, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Checkboxes</label>
                            <div class=""col-md-10"">
                                <div class=""md-checkbox-list"">
                                    <div class=""md-checkbox"">
                                        <input type=""checkbox"" id=""checkbox30"" class=""md-check"">
                                        <label for=""checkbox30"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 1
                                        </label>
                                    </div>
                                    <div class=""md-checkbox has-error"">
                                        <input type=""checkbox"" id=""checkbox31""");
                WriteLiteral(@" class=""md-check"" checked>
                                        <label for=""checkbox31"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 2
                                        </label>
                                    </div>
                                    <div class=""md-checkbox has-warning"">
                                        <input type=""checkbox"" id=""checkbox32"" class=""md-check"">
                                        <label for=""checkbox32"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 3
                                        </label>
                                    </div>
                                </div>
                            </div>
   ");
                WriteLiteral(@"                     </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Inline Checkboxes</label>
                            <div class=""col-md-10"">
                                <div class=""md-checkbox-inline"">
                                    <div class=""md-checkbox"">
                                        <input type=""checkbox"" id=""checkbox33"" class=""md-check"">
                                        <label for=""checkbox33"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 1
                                        </label>
                                    </div>
                                    <div class=""md-checkbox has-error"">
                                        <input type=""checkbox"" id=""checkbox34"" class=""m");
                WriteLiteral(@"d-check"" checked>
                                        <label for=""checkbox34"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 2
                                        </label>
                                    </div>
                                    <div class=""md-checkbox has-info"">
                                        <input type=""checkbox"" id=""checkbox35"" class=""md-check"">
                                        <label for=""checkbox35"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 3
                                        </label>
                                    </div>
                                </div>
                            </div>
               ");
                WriteLiteral(@"         </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Radios</label>
                            <div class=""col-md-10"">
                                <div class=""md-radio-list"">
                                    <div class=""md-radio"">
                                        <input type=""radio"" id=""radio50"" name=""radio211"" class=""md-radiobtn"">
                                        <label for=""radio50"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 1
                                        </label>
                                    </div>
                                    <div class=""md-radio has-error"">
                                        <input type=""radio"" id=""radio51"" name=""radio211"" class=""md-radiobtn"" ch");
                WriteLiteral(@"ecked>
                                        <label for=""radio51"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 2
                                        </label>
                                    </div>
                                    <div class=""md-radio has-warning"">
                                        <input type=""radio"" id=""radio52"" name=""radio231"" class=""md-radiobtn"">
                                        <label for=""radio52"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 3
                                        </label>
                                    </div>
                                </div>
                            </div>
                   ");
                WriteLiteral(@"     </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Inline Radios</label>
                            <div class=""col-md-10"">
                                <div class=""md-radio-inline"">
                                    <div class=""md-radio"">
                                        <input type=""radio"" id=""radio53"" name=""radio2"" class=""md-radiobtn"">
                                        <label for=""radio53"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 1
                                        </label>
                                    </div>
                                    <div class=""md-radio has-error"">
                                        <input type=""radio"" id=""radio54"" name=""radio2"" class=""md-radiobtn"" c");
                WriteLiteral(@"hecked>
                                        <label for=""radio54"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 2
                                        </label>
                                    </div>
                                    <div class=""md-radio has-warning"">
                                        <input type=""radio"" id=""radio55"" name=""radio2"" class=""md-radiobtn"">
                                        <label for=""radio55"">
                                            <span></span>
                                            <span class=""check""></span>
                                            <span class=""box""></span> Option 3
                                        </label>
                                    </div>
                                </div>
                            </div>
                    ");
                WriteLiteral(@"    </div>
                    </div>
                    <div class=""form-actions"">
                        <div class=""row"">
                            <div class=""col-md-offset-2 col-md-10"">
                                <button type=""button"" class=""btn default"">Cancel</button>
                                <button type=""button"" class=""btn blue"">Submit</button>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(79365, 1239, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-green-haze"">
                    <i class=""icon-settings font-green-haze""></i>
                    <span class=""caption-subject bold uppercase""> Input Groups & Icons</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""></i>
                    </a>
                    <a class=""bt");
            WriteLiteral("n btn-circle btn-icon-only btn-default fullscreen\" href=\"javascript:;\" data-original-title=\"\" title=\"\"> </a>\r\n                </div>\r\n            </div>\r\n            <div class=\"portlet-body form\">\r\n                ");
            EndContext();
            BeginContext(80604, 10075, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8d957c6a9bcc48c7b2565f790a94c018", async() => {
                BeginContext(80646, 10026, true);
                WriteLiteral(@"
                    <div class=""form-body"">
                        <div class=""form-group form-md-line-input has-danger"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Left icon</label>
                            <div class=""col-md-10"">
                                <div class=""input-icon"">
                                    <input type=""text"" class=""form-control"" placeholder=""Left icon"">
                                    <div class=""form-control-focus""> </div>
                                    <span class=""help-block"">Some help goes here...</span>
                                    <i class=""fa fa-bell-o""></i>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-success"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Right icon</label>
                            <div class=""col-md-");
                WriteLiteral(@"10"">
                                <div class=""input-icon right"">
                                    <input type=""text"" class=""form-control"" placeholder=""Right icon"">
                                    <div class=""form-control-focus""> </div>
                                    <span class=""help-block"">Some help goes here...</span>
                                    <i class=""icon-user""></i>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Input Group</label>
                            <div class=""col-md-10"">
                                <div class=""input-group has-success"">
                                    <span class=""input-group-addon"">
                                        <i class=""fa fa-envelope""></i>
                                    </span>
                       ");
                WriteLiteral(@"             <input type=""text"" class=""form-control"" placeholder=""Email Address"">
                                    <div class=""form-control-focus""> </div>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input has-info"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Input Group</label>
                            <div class=""col-md-10"">
                                <div class=""input-group"">
                                    <input type=""text"" class=""form-control"" placeholder=""Email Address"">
                                    <span class=""help-block"">Some help goes here...</span>
                                    <div class=""form-control-focus""> </div>
                                    <span class=""input-group-addon"">
                                        <i class=""fa fa-envelope""></i>
                                    </spa");
                WriteLiteral(@"n>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Both Addons</label>
                            <div class=""col-md-10"">
                                <div class=""input-group"">
                                    <span class=""input-group-addon"">$</span>
                                    <input type=""text"" class=""form-control"" placeholder=""Enter amount"">
                                    <div class=""form-control-focus""> </div>
                                    <span class=""input-group-addon"">.00</span>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Action Button</labe");
                WriteLiteral(@"l>
                            <div class=""col-md-10"">
                                <div class=""input-group"">
                                    <span class=""input-group-btn btn-left"">
                                        <button class=""btn blue-madison"" type=""button"">Go!</button>
                                    </span>
                                    <div class=""input-group-control"">
                                        <input type=""text"" class=""form-control"" placeholder=""Placeholder"">
                                        <div class=""form-control-focus""> </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Dropdowm Menu</label>
                            <div class=""col-md-10"">
                                <div clas");
                WriteLiteral(@"s=""input-group"">
                                    <div class=""input-group-control"">
                                        <input type=""text"" class=""form-control"" placeholder=""Placeholder"">
                                        <div class=""form-control-focus""> </div>
                                    </div>
                                    <span class=""input-group-btn btn-right"">
                                        <button type=""button"" class=""btn green-haze dropdown-toggle"" data-toggle=""dropdown"" aria-expanded=""false"">
                                            Action
                                            <i class=""fa fa-angle-down""></i>
                                        </button>
                                        <ul class=""dropdown-menu pull-right"" role=""menu"">
                                            <li>
                                                <a href=""javascript:;"">Action</a>
                                            </li>
                    ");
                WriteLiteral(@"                        <li>
                                                <a href=""javascript:;"">Another action</a>
                                            </li>
                                            <li>
                                                <a href=""javascript:;"">Something else here</a>
                                            </li>
                                            <li class=""divider""> </li>
                                            <li>
                                                <a href=""javascript:;"">Separated link</a>
                                            </li>
                                        </ul>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Action Buttons(small size)</label>");
                WriteLiteral(@"
                            <div class=""col-md-10"">
                                <div class=""input-group input-group-sm"">
                                    <span class=""input-group-btn btn-left"">
                                        <button class=""btn red-intense"" type=""button"">Go!</button>
                                    </span>
                                    <div class=""input-group-control"">
                                        <input type=""text"" class=""form-control input-sm"" placeholder="".input-sm"">
                                        <span class=""help-block"">Some help goes here...</span>
                                        <div class=""form-control-focus""> </div>
                                    </div>
                                    <span class=""input-group-btn btn-right"">
                                        <button class=""btn green-haze"" type=""button"">Go!</button>
                                    </span>
                                </div>
     ");
                WriteLiteral(@"                       </div>
                        </div>
                        <div class=""form-group form-md-line-input"">
                            <label class=""col-md-2 control-label"" for=""form_control_1"">Action Buttons(large size)</label>
                            <div class=""col-md-10"">
                                <div class=""input-group input-group-lg"">
                                    <span class=""input-group-btn btn-left"">
                                        <button class=""btn red-intense"" type=""button"">Go!</button>
                                    </span>
                                    <div class=""input-group-control"">
                                        <input type=""text"" class=""form-control input-lg"" placeholder="".input-lg"">
                                        <span class=""help-block"">Some help goes here...</span>
                                        <div class=""form-control-focus""> </div>
                                    </div>
             ");
                WriteLiteral(@"                       <span class=""input-group-btn btn-right"">
                                        <button class=""btn green-haze"" type=""button"">Go!</button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""form-actions margin-top-10"">
                        <div class=""row"">
                            <div class=""col-md-offset-2 col-md-10"">
                                <button type=""button"" class=""btn default"">Cancel</button>
                                <button type=""button"" class=""btn blue"">Submit</button>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(90679, 1332, true);
            WriteLiteral(@"
            </div>
        </div>
        <!-- END SAMPLE FORM PORTLET-->
    </div>
</div>
<div class=""row"">
    <div class=""col-md-12"">
        <!-- BEGIN SAMPLE FORM PORTLET-->
        <div class=""portlet light bordered"">
            <div class=""portlet-title"">
                <div class=""caption font-green-haze"">
                    <i class=""icon-settings font-green-haze""></i>
                    <span class=""caption-subject bold uppercase""> Form Layouts</span>
                </div>
                <div class=""actions"">
                    <a class=""btn btn-circle btn-icon-only blue"" href=""javascript:;"">
                        <i class=""icon-cloud-upload""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only green"" href=""javascript:;"">
                        <i class=""icon-wrench""></i>
                    </a>
                    <a class=""btn btn-circle btn-icon-only red"" href=""javascript:;"">
                        <i class=""icon-trash""></i>");
            WriteLiteral(@"
                    </a>
                    <a class=""btn btn-circle btn-icon-only btn-default fullscreen"" href=""javascript:;"" data-original-title="""" title=""""> </a>
                </div>
            </div>
            <div class=""portlet-body"">
                <h4>Inline Form</h4>
                ");
            EndContext();
            BeginContext(92011, 1172, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "21810cf10a124ec4a274b54b0ad77cb8", async() => {
                BeginContext(92066, 1110, true);
                WriteLiteral(@"
                    <div class=""form-group form-md-line-input has-success"">
                        <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Email email"">
                        <div class=""form-control-focus""> </div>
                    </div>
                    <div class=""form-group form-md-line-input has-success"">
                        <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder=""Enter password"">
                        <div class=""form-control-focus""> </div>
                    </div>
                    <div class=""md-checkbox md-checkbox-inline has-success"">
                        <input type=""checkbox"" id=""checkbox113"" class=""md-check"">
                        <label for=""checkbox113"">
                            <span></span>
                            <span class=""check""></span>
                            <span class=""box""></span> Remember me
                        </label>
                    </div>
              ");
                WriteLiteral("      <button type=\"button\" class=\"btn btn-warning\">Sign in</button>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(93183, 67, true);
            WriteLiteral("\r\n                <h4>Inline Form With Icons</h4>\r\n                ");
            EndContext();
            BeginContext(93250, 1586, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0fe55a54b8054414ad7cb4f8c4dc6224", async() => {
                BeginContext(93305, 1524, true);
                WriteLiteral(@"
                    <div class=""form-group form-md-line-input has-error"">
                        <div class=""input-icon"">
                            <input type=""email"" class=""form-control"" placeholder=""Email"">
                            <div class=""form-control-focus""> </div>
                            <span class=""help-block"">Some help goes here...</span>
                            <i class=""fa fa-envelope-o""></i>
                        </div>
                    </div>
                    <div class=""form-group form-md-line-input has-error"">
                        <div class=""input-icon"">
                            <input type=""password"" class=""form-control"" placeholder=""Password"">
                            <div class=""form-control-focus""> </div>
                            <span class=""help-block"">Some help goes here...</span>
                            <i class=""fa fa-key""></i>
                        </div>
                    </div>
                    <div class=""md-checkb");
                WriteLiteral(@"ox md-checkbox-inline has-success"">
                        <input type=""checkbox"" id=""checkbox111"" class=""md-check"">
                        <label for=""checkbox111"">
                            <span></span>
                            <span class=""check""></span>
                            <span class=""box""></span> Remember me
                        </label>
                    </div>
                    <button type=""button"" class=""btn btn-success"">Sign in</button>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(94836, 60, true);
            WriteLiteral("\r\n                <h4>Horizontal Form</h4>\r\n                ");
            EndContext();
            BeginContext(94896, 2042, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "898a4268f9524307b5ac3e33e7c64de3", async() => {
                BeginContext(94955, 1976, true);
                WriteLiteral(@"
                    <div class=""form-group form-md-line-input"">
                        <label for=""inputEmail1"" class=""col-md-2 control-label"">Email</label>
                        <div class=""col-md-4"">
                            <input type=""email"" class=""form-control"" id=""form_control_1"" placeholder=""Email"">
                            <div class=""form-control-focus""> </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-line-input"">
                        <label for=""inputPassword12"" class=""col-md-2 control-label"">Password</label>
                        <div class=""col-md-4"">
                            <input type=""password"" class=""form-control"" id=""form_control_1"" placeholder=""Password"">
                            <div class=""form-control-focus""> </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-line-input"">
                        <div class=""col-md-offse");
                WriteLiteral(@"t-2 col-md-4"">
                            <div class=""md-checkbox-list"">
                                <div class=""md-checkbox"">
                                    <input type=""checkbox"" id=""checkbox1111"" class=""md-check"">
                                    <label for=""checkbox1111"">
                                        <span></span>
                                        <span class=""check""></span>
                                        <span class=""box""></span> Remember me
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <div class=""col-md-offset-2 col-md-10"">
                            <button type=""button"" class=""btn blue"">Sign in</button>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(96938, 71, true);
            WriteLiteral("\r\n                <h4>Horizontal Form With Icons</h4>\r\n                ");
            EndContext();
            BeginContext(97009, 2417, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "24fc47853aae4eaf8641790457dee087", async() => {
                BeginContext(97068, 2351, true);
                WriteLiteral(@"
                    <div class=""form-group form-md-line-input"">
                        <label for=""inputEmail12"" class=""col-md-2 control-label"">Email</label>
                        <div class=""col-md-4"">
                            <div class=""input-icon"">
                                <input type=""email"" class=""form-control"" placeholder=""Email"">
                                <div class=""form-control-focus""> </div>
                                <i class=""fa fa-envelope-o""></i>
                            </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-line-input"">
                        <label for=""inputPassword1"" class=""col-md-2 control-label"">Password</label>
                        <div class=""col-md-4"">
                            <div class=""input-icon right"">
                                <input type=""password"" class=""form-control"" placeholder=""Password"">
                                <div class=""form-contr");
                WriteLiteral(@"ol-focus""> </div>
                                <i class=""fa fa-key""></i>
                            </div>
                            <div class=""help-block""> with right aligned icon </div>
                        </div>
                    </div>
                    <div class=""form-group form-md-line-input"">
                        <div class=""col-md-offset-2 col-md-4"">
                            <div class=""md-checkbox-list"">
                                <div class=""md-checkbox"">
                                    <input type=""checkbox"" id=""checkbox11111"" class=""md-check"">
                                    <label for=""checkbox11111"">
                                        <span></span>
                                        <span class=""check""></span>
                                        <span class=""box""></span> Remember me
                                    </label>
                                </div>
                            </div>
                        </div>");
                WriteLiteral(@"
                    </div>
                    <div class=""form-group"">
                        <div class=""col-md-offset-2 col-md-10"">
                            <button type=""button"" class=""btn green"">Sign in</button>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(99426, 58, true);
            WriteLiteral("\r\n                <h4>Column Sizing</h4>\r\n                ");
            EndContext();
            BeginContext(99484, 1698, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1e096e1ff451430daa3ac03e17932a12", async() => {
                BeginContext(99527, 1648, true);
                WriteLiteral(@"
                    <div class=""row"">
                        <div class=""col-md-2"">
                            <div class=""form-group form-md-line-input has-success"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder="".col-md-2"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""col-md-3"">
                            <div class=""form-group form-md-line-input has-warning"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder="".col-md-3"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <div class=""form-group form-md-line-input has-info"">
                                <input type=""text"" class=""form-contro");
                WriteLiteral(@"l"" id=""form_control_1"" placeholder="".col-md-4"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                        <div class=""col-md-3"">
                            <div class=""form-group form-md-line-input has-error"">
                                <input type=""text"" class=""form-control"" id=""form_control_1"" placeholder="".col-md-3"">
                                <div class=""form-control-focus""> </div>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(101182, 93, true);
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- END SAMPLE FORM PORTLET-->\r\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
