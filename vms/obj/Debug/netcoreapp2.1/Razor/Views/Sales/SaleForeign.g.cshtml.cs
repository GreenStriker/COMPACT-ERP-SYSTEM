#pragma checksum "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ed475fa81788fa3c1575ad11a08c546327c25e9a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sales_SaleForeign), @"mvc.1.0.view", @"/Views/Sales/SaleForeign.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Sales/SaleForeign.cshtml", typeof(AspNetCore.Views_Sales_SaleForeign))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\personal\New folder\MoneyMoney\vms\Views\_ViewImports.cshtml"
using vms;

#line default
#line hidden
#line 2 "E:\personal\New folder\MoneyMoney\vms\Views\_ViewImports.cshtml"
using vms.Models;

#line default
#line hidden
#line 1 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
using vms.Utility;

#line default
#line hidden
#line 2 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
using vms.entity.viewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ed475fa81788fa3c1575ad11a08c546327c25e9a", @"/Views/Sales/SaleForeign.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c551d0fb6d1cb6e33accdc0872f5172ad460dc03", @"/Views/_ViewImports.cshtml")]
    public class Views_Sales_SaleForeign : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("CustomerId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "CustomerId", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("SalesDeliveryTypeId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "SalesDeliveryTypeId", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ExportTypeId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "ExportTypeId", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "volvo", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "saab", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("unit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "unit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Sales/Index"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-default"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/typeahead.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-ui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
  
    var session = Context.Session.GetComplexData<vms.entity.viewModels.vmSession>("session");

#line default
#line hidden
#line 6 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
            BeginContext(193, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("breadcrumb", async() => {
                BeginContext(221, 64, true);
                WriteLiteral("\r\n    <ul class=\"page-breadcrumb\">\r\n        <li>\r\n            <a");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 285, "\"", 324, 1);
#line 14 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
WriteAttributeValue("", 292, Url.Action("Dashboard", "Home"), 292, 32, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(325, 96, true);
                WriteLiteral(">Root</a>\r\n            <i class=\"fa fa-circle\"></i>\r\n        </li>\r\n        <li>\r\n            <a");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 421, "\"", 456, 1);
#line 18 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
WriteAttributeValue("", 428, Url.Action("Index","Sales"), 428, 28, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(457, 101, true);
                WriteLiteral(">Sale List</a>\r\n            <i class=\"fa fa-circle\"></i>\r\n        </li>\r\n        <li>\r\n            <a");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 558, "\"", 593, 1);
#line 22 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
WriteAttributeValue("", 565, Url.Action("Index","Sales"), 565, 28, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(594, 101, true);
                WriteLiteral(">Sale List</a>\r\n            <i class=\"fa fa-circle\"></i>\r\n        </li>\r\n        <li>\r\n            <a");
                EndContext();
                BeginWriteAttribute("href", " href=\"", 695, "\"", 731, 1);
#line 26 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
WriteAttributeValue("", 702, Url.Action("Create","Sales"), 702, 29, false);

#line default
#line hidden
                EndWriteAttribute();
                BeginContext(732, 47, true);
                WriteLiteral(">New Sale Order</a>\r\n        </li>\r\n    </ul>\r\n");
                EndContext();
            }
            );
            BeginContext(782, 141, true);
            WriteLiteral("\r\n<input type=\"hidden\" class=\"form-control\" id=\"ProductId\" name=\"ProductId\" />\r\n\r\n<div class=\"custom-page-title\">\r\n    Sale Foreign\r\n</div>\r\n");
            EndContext();
            BeginContext(923, 390, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2540e052ff38415aa5e74e0f827bfcfe", async() => {
                BeginContext(929, 377, true);
                WriteLiteral(@"

    <style>
        .loader {
            border: 16px solid #f3f3f3; /* Light grey */
            border-top: 16px solid #3498db; /* Blue */
            border-radius: 50%;
            width: 120px;
            height: 120px;
            animation: spin 2s linear infinite;
        }

        .hide-loader {
            display: none;
        }
    </style>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1313, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1315, 16059, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "746c20df5c5f4a95943c0e9af2c496bf", async() => {
                BeginContext(1335, 655, true);
                WriteLiteral(@"
    <div class=""row"">
        <div class=""col-md-8"" style=""border-right: 1px solid #eee"">
            <div class=""row"">

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">

                        <input type=""text"" class=""form-control"" id=""InvoiceNo"" name=""InvoiceNo"" placeholder=""##"">

                        <label>Invoice</label>
                    </div>
                </div>

                <!-- BEGIN SAMPLE FORM PORTLET-->
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">

                        ");
                EndContext();
                BeginContext(1990, 103, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "91222d446dcb4609b8d9e002da1c2910", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
#line 71 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.CustomerId;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2093, 931, true);
                WriteLiteral(@"
                        <label>Org. Name</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" class=""form-control"" id=""CustomerContactNo"" name=""CustomerContactNo"" placeholder=""01####"">
                        <label>Mobile</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" class=""form-control"" id=""WorkOrderNo"" name=""WorkOrderNo"" placeholder=""##"">
                        <label>Order No</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">

                        ");
                EndContext();
                BeginContext(3024, 130, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e292db2be9364754bb7aa000212814d6", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
#line 91 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.SalesDeliveryTypeId;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3154, 244, true);
                WriteLiteral("\r\n                        <label>Delivery</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-2 \">\r\n                    <div class=\"form-group form-md-line-input has-info\">\r\n\r\n                        ");
                EndContext();
                BeginContext(3398, 109, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ece242c42aa4bc8b3ac514786a9242f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
#line 98 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.ExportTypeId;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3507, 2378, true);
                WriteLiteral(@"

                        <label>Export Type</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" class=""form-control"" id=""ExpectedDeleveryDate"" name=""ExpectedDeleveryDate"" placeholder=""2018-12-17"">
                        <label>Expt.Date</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" class=""form-control"" id=""DeliveryDate"" name=""DeliveryDate"" placeholder=""2018-12-17"">
                        <label>Date</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" class=""form-control"" id=""Discount"" name=""Discount"" ");
                WriteLiteral(@"placeholder=""00"" value=""0"">
                        <label>Discount</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""ReceiverName"" id=""ReceiverName"" class=""form-control"" />
                        <label>Name</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""ReceiverContactNo"" id=""ReceiverContactNo"" class=""form-control"" />
                        <label>Contact</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""ShippingAddress"" id=""ShippingAddress"" class=""form-control"" />
              ");
                WriteLiteral(@"          <label>Address</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <select name=""DeliveryMethodId"" id=""DeliveryMethodId"" class=""form-control"">
                            ");
                EndContext();
                BeginContext(5885, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "665092634d2c4bca8d1f4dbc479a6c1d", async() => {
                    BeginContext(5903, 16, true);
                    WriteLiteral("DeliveryMethod-1");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5928, 30, true);
                WriteLiteral("\r\n                            ");
                EndContext();
                BeginContext(5958, 43, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "57adcdbd43d04177bd6f238052863b75", async() => {
                    BeginContext(5976, 16, true);
                    WriteLiteral("DeliveryMethod-2");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6001, 715, true);
                WriteLiteral(@"
                        </select>
                        <label>Dlv. Method</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""VatChallanNo"" id=""VatChallanNo"" class=""form-control"" />
                        <label>Vat Chln. No</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <select name=""ShippingCountryId"" id=""ShippingCountryId"" class=""form-control"">
                            ");
                EndContext();
                BeginContext(6716, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d07f9fb42b3498b8c4d4b7d594e002c", async() => {
                    BeginContext(6738, 10, true);
                    WriteLiteral("Bangladesh");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6757, 30, true);
                WriteLiteral("\r\n                            ");
                EndContext();
                BeginContext(6787, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9f07caa479f04702ac8e388370d4e8d9", async() => {
                    BeginContext(6808, 5, true);
                    WriteLiteral("India");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6822, 3683, true);
                WriteLiteral(@"
                        </select>
                        <label>Country</label>
                    </div>
                </div>

                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""LcNo"" id=""LcNo"" class=""form-control"" />
                        <label>LC No</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""LcDate"" id=""LcDate"" class=""form-control"" />
                        <label>LC Date</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""BillOfEntry"" id=""BillOfEntry"" class=""form-control"" />
                        <label>Bill Of Entry</label>
");
                WriteLiteral(@"                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""BillOfEntryDate"" id=""BillOfEntryDate"" class=""form-control"" />
                        <label>BOE Date</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""TermsOfLc"" id=""TermsOfLc"" class=""form-control"" />
                        <label>LC Terms</label>
                    </div>
                </div>
                <div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""DueDate"" id=""DueDate"" class=""form-control"" />
                        <label>Due Date</label>
                    </div>
                </div>
                ");
                WriteLiteral(@"<div class=""col-md-2 "">
                    <div class=""form-group form-md-line-input has-info"">
                        <input type=""text"" name=""CustomerPoNumber"" id=""CustomerPoNumber"" class=""form-control"" />
                        <label>PO No</label>
                    </div>
                </div>
                <div class=""col-md-2 "">

                    <div class=""mt-repeater-input mt-radio-inline"">
                        <label style=""padding-top:19px"">
                            <input type=""checkbox"" name=""IsVatDeductedInSource"" id=""IsVatDeductedInSource"" value=""IsVatDeductedInSource""> VDS?
                            <span></span>
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <div class=""col-md-4"">
            <div class=""row"">
                <div class=""col-md-12"">
                    <h4>Document Info</h4>
                    <table class=""table table-bordered"" id=""contentTable"">
        ");
                WriteLiteral(@"                <thead>
                            <tr>

                                <th>Type</th>
                                <th>File</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>

                                <td class=""form-group form-md-line-input has-info"">
                                    <select class=""form-control"" id=""DocumentTypeId"" name=""DocumentTypeId"">
                                        ");
                EndContext();
                BeginContext(10505, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b447b37a1b0d47b1b0e34d35e7c8714e", async() => {
                    BeginContext(10523, 7, true);
                    WriteLiteral("Invoice");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10539, 1679, true);
                WriteLiteral(@"
                                    </select>
                                </td>
                                <td class=""form-group form-md-line-input has-info"">
                                    <input type=""file"" name=""FileUpload"" id=""FileUpload"" class=""form-control"" />
                                </td>
                                <td>
                                    <a id=""addDocument"" class="""" aria-label=""Left Align"">
                                        <span class=""glyphicon glyphicon-plus"" aria-hidden=""true""></span>
                                    </a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class=""col-md-12"">
                    <h4>Payment Info</h4>
                    <table class=""table table-bordered"" id=""payment"">
                        <thead>
                            <tr>
                                <th>");
                WriteLiteral(@"SL</th>
                                <th>Method</th>
                                <th>Amount</th>
                                <th>Date</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td></td>
                                <td class=""form-group form-md-line-input has-info"">

                                    <select class=""form-control"" id=""PaymentMethodId"" name=""PaymentMethodId"">
                                        ");
                EndContext();
                BeginContext(12218, 31, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "267b2235d9f146fe9f1939da95eb53f2", async() => {
                    BeginContext(12236, 4, true);
                    WriteLiteral("Cash");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(12249, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(12291, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38a2e1b4786f48078ed810129729c338", async() => {
                    BeginContext(12309, 11, true);
                    WriteLiteral("Money Order");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(12329, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(12371, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "07df625b4ad6497bba9000a7c7b79af3", async() => {
                    BeginContext(12389, 6, true);
                    WriteLiteral("Online");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(12404, 3363, true);
                WriteLiteral(@"
                                    </select>
                                </td>
                                <td class=""form-group form-md-line-input has-info"">
                                    <input type=""text"" name=""PaidAmount"" id=""PaidAmount"" class=""form-control"" />
                                </td>
                                <td class=""form-group form-md-line-input has-info"">
                                    <input type=""text"" name=""PaymentDate"" id=""PaymentDate"" class=""form-control"" />
                                </td>
                                <td>
                                    <a id=""addPayment"" class="""" aria-label=""Left Align"">
                                        <span class=""glyphicon glyphicon-plus"" aria-hidden=""true""></span>
                                    </a>
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>");
                WriteLiteral(@"
        </div>
    </div>

    <div class=""row"">
        <div class=""col-md-12 "">
            <h3>Sale Details</h3>
        </div>

        <div class=""col-md-12"">

            <table class=""table table-bordered form-table"" id=""gridTable"">
                <thead>
                    <tr>
                        <th>SL</th>
                        <th>Product</th>
                        <th>Stock</th>
                        <th>Qty</th>
                        <th>Rate</th>
                        <th>SD.(%)</th>
                        <th>Amount</th>
                        <th>Unit</th>
                        <th>VAT(%)</th>
                        <th>VAT</th>
                        <th>Total</th>
                        <th></th>
                            
                        
                    </tr>
                    <tr>

                        <td></td>
                        <td class=""form-group form-md-line-input has-info"">
                           ");
                WriteLiteral(@" <input type=""text"" class=""form-control"" id=""Product"" name=""Product"">
                        </td>
                        <td class=""form-group form-md-line-input has-info"">
                            <input type=""text"" readonly=""readonly"" class=""form-control"" id=""MaxSaleQty"" name=""MaxSaleQty"">
                        </td>

                        <td class=""form-group form-md-line-input has-info"">
                            <input type=""text"" class=""form-control"" id=""item"" name=""item"">
                        </td>

                        <td class=""form-group form-md-line-input has-info"">
                            <input type=""text"" readonly class=""form-control"" id=""Amount"" name=""Amount"" />
                        </td>
                        <td class=""form-group form-md-line-input has-info"">
                            <input type=""text"" class=""form-control"" id=""SupplementaryDutyPercent"" name=""SupplementaryDutyPercent"" />
                        </td>
                        <td c");
                WriteLiteral(@"lass=""form-group form-md-line-input has-info"">
                            <input type=""text"" readonly class=""form-control"" id=""amount"" name=""amount"">
                        </td>
                        <td class=""form-group form-md-line-input has-info"">

                            ");
                EndContext();
                BeginContext(15767, 98, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8353ab4be28b4771b92272662fca3d8a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
#line 350 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.MeasurementUnitId;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15865, 1061, true);
                WriteLiteral(@"
                        </td>

                        <td class=""form-group form-md-line-input has-info"">
                            <input type=""text"" readonly class=""form-control"" id=""VAT"" name=""VAT"" />
                        </td>
                        <td>
                            <label id=""vatValue"" name=""vatValue""></label>
                        </td>
                        <td>
                            <label id=""totalValue"" name=""totalValue""></label>
                        </td>
                        <td>
                            <a id=""add"" class=""btn"" aria-label=""Left Align"">
                                <span class=""glyphicon glyphicon-plus"" aria-hidden=""true""></span>
                            </a>
                        </td>
                    </tr>
                </thead>

                <tbody id=""tblPurchaseOD""></tbody>
                <tfoot>
                </tfoot>
            </table>
        </div>
    </div>

    <div class=""form-a");
                WriteLiteral("ctions\" style=\"margin-bottom:20px\">\r\n");
                EndContext();
#line 378 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
         if (UserRole.Check(FeatureList.SALE_SALES_FOREIGN_CAN_SAVE, session.Rights))
        {


#line default
#line hidden
                BeginContext(17026, 107, true);
                WriteLiteral("            <button type=\"button\" class=\"btn blue\" id=\"save\"><i class=\"fa fa-floppy-o\"></i> Save</button>\r\n");
                EndContext();
#line 382 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
        }

#line default
#line hidden
                BeginContext(17144, 8, true);
                WriteLiteral("        ");
                EndContext();
#line 383 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
         if (UserRole.Check(FeatureList.SALE_SALES_FOREIGN_CAN_CANCEL, session.Rights))
        {


#line default
#line hidden
                BeginContext(17246, 12, true);
                WriteLiteral("            ");
                EndContext();
                BeginContext(17258, 84, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "17acc1b1ad7a43e78fe0e71c5868954b", async() => {
                    BeginContext(17306, 32, true);
                    WriteLiteral("<i class=\"fa fa-ban\"></i> Cancel");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17342, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 387 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
        }

#line default
#line hidden
                BeginContext(17355, 12, true);
                WriteLiteral("    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_16.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17374, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(17393, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(17401, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6b72eea81d5844768f73ff5f1ceed4d7", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17449, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(17455, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e3ff893654cb4f3b80f66193c69f75d6", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(17496, 19408, true);
                WriteLiteral(@"
    <script>

        var SalesOrder = {
            init: function() {},
            count: 1,
            unitAmount: 0,
            totalPrice: 0,
            totalVat: 0,
            SalesDetailList: [],
            ContentInfoJson: [],
            SalesPaymentReceiveJson:[],
            item: [],
            calculateTotal: function () {
                var vatPercent = $('#VAT').val();
                var unitAmount = $('#amount').val();
                var vatValue = parseFloat(unitAmount);
                var vat = parseFloat(vatPercent) / 100;
                vatValue = vatValue * (vat);
                var total = parseFloat(unitAmount) + vatValue;
                $('#vatValue').text(vatValue);
                $('#totalValue').text(total);
            },
            getPurchaseOrder: function () {
                var purchaseOrder = new Object();
                var OrganizationId = $('#OrganizationId').val();
                var VendorId = $('#VendorId').val();
         ");
                WriteLiteral(@"       var Amount = $('#PurchaseAmount').val();
                var ExtDeliveryDate = $('#ExpectedDeleveryDate').val();
                var DeliveryDate = $('#DeliveryDate').val();
                var Iteams = $('#PurchaseIteams').val();
                var Vat = $('#PurchaseVat').val();
                var Discount = $('#Discount').val();
                purchaseOrder.OrganizationId = OrganizationId;
                purchaseOrder.VendorId = VendorId;
                purchaseOrder.Amount = Amount;
                purchaseOrder.ExtDeliveryDate = ExtDeliveryDate;
                purchaseOrder.DeliveryDate = DeliveryDate;
                purchaseOrder.Iteams = Iteams;
                purchaseOrder.Vat = Vat;
                purchaseOrder.Discount = Discount;
                //SalesOrder.purchaseOrders.push(purchaseOrder);
            },
            CalculateTotalPriceAndVat: function(totalPrice,totalVat) {
                SalesOrder.totalPrice += totalPrice;
                SalesOrder.totalVat ");
                WriteLiteral(@"+= totalVat;
                $('#TotalPrice').text(SalesOrder.totalPrice);
                $('#TotalVat').text(SalesOrder.totalVat);
            },
            gridTableEmpty: function() {
                $('#ProductId').val('');
                $('#Product').val('');
                $('#Amount').val('');
                $('#item').val('');
                $('#amount').val('');
                $('#VAT').val('');
                $('#MaxSaleQty').val('');
                $('#SupplementaryDutyPercent').val('');
                $('#InitialAmount').val('');
                $('#InvoiceNo').val('');
                $('#vatValue').text('');
                $('#totalValue').text('');
            },
            addDocument: function () {
                debugger
                var DocumentName = $('#DocumentTypeId option:selected').text();
                var DocumentTypeId = $('#DocumentTypeId').val();
                var files = $(""#FileUpload"").get(0).files;
                var table = docume");
                WriteLiteral(@"nt.getElementById('contentTable');
                var rowCount = table.rows.length;
                if (DocumentTypeId > 0) {
                    var canAdd = true;

                    if (canAdd) {
                        var data = new Object();
                        //PurchaseDetails
                        data.rowCount = rowCount;
                        data.DocumentTypeId = DocumentTypeId;
                        data.UploadFile = files[0];
                        SalesOrder.ContentInfoJson.push(data);

                        var html = '<tr id=""' +
                            rowCount +
                            '"">' +
                            //'<td>' +
                            //rowCount +
                            //'</td>' +
                            '<td>' +
                            DocumentName +
                            '</td>' +
                            '<td>' +
                            files[0].name +
                            '</td>' +
");
                WriteLiteral(@"                            '<td><span onclick=""DeleteDocument(' +
                            rowCount +
                            ')""  class=""glyphicon glyphicon-minus btn-xs""></a></span></td>';

                        html += '</tr>';

                        $(""table#contentTable > tbody"").append(html);
                        //purchasOrder.count++;

                    }
                }

            },
            isNumber:function (n) {
                return !isNaN(parseFloat(n)) && isFinite(n);
            },
            addPayment: function () {

                var PaymentMethod = $('#PaymentMethodId option:selected').text();
                var PaymentMethodId = $('#PaymentMethodId').val();
                var PaidAmount = $(""#PaidAmount"").val();
                var PaymentDate = $(""#PaymentDate"").val();
                var table = document.getElementById('payment');
                var rowCount = table.rows.length;
                if (PaymentMethodId > 0) {
         ");
                WriteLiteral(@"           var canAdd = true;

                    if (canAdd) {
                        var data = new Object();
                        //PurchaseDetails
                        data.rowCountPayment = rowCount;
                        data.ReceivedPaymentMethodId = PaymentMethodId;
                        data.ReceiveAmount = PaidAmount;
                        data.ReceiveDate = PaymentDate;
                        SalesOrder.SalesPaymentReceiveJson.push(data);

                        var html = '<tr id=""' +
                            rowCount +
                            '"">' +
                            '<td>' +
                            rowCount +
                            '</td>' +
                            '<td>' +
                            PaymentMethod +
                            '</td>' +
                            '<td>' +
                            PaidAmount +
                            '</td>' +
                            '<td>' +
                      ");
                WriteLiteral(@"      PaymentDate +
                            '</td>' +
                            '<td><span onclick=""DeletePayment(' +
                            rowCount +
                            ')""  class=""glyphicon glyphicon-minus btn-xs""></a></span></td>';

                        html += '</tr>';

                        $(""table#payment > tbody"").append(html);
                        //purchasOrder.count++;

                    }
                }

            },
            add: function () {
                debugger
                var productName = $('#Product').val();
                var productId = $('#ProductId').val();
                var vendor = $('#VendorId option:selected').text();
                var vendorId = $('#VendorId').val();
                var PurchaseInvoice = $('#PurchaseInvoice').val();
                var item = $('#item').val();
                var InitialAmount = $('#InitialAmount').val();
                var amount = $('#amount').val();
                var");
                WriteLiteral(@" vatPercent = $('#VAT').val();
                var unit = $('#unit option:selected').text();
                var unitId = $('#unit').val();
                var unitAmount = $('#Amount').val();
                var MaxSaleQty = $('#MaxSaleQty').val();
                var SupplementaryDutyPercent = $('#SupplementaryDutyPercent').val();
                if (productId>0) {

                    var canAdd = true;

                    $.each(SalesOrder.SalesDetailList,
                        function (i, v) {
                            if (SalesOrder.SalesDetailList[i].ProductId == productId) {
                                alert('Sorry! product Order Exists.');
                                canAdd = false;

                            }

                        });

                    if (canAdd) {

                        if (!SalesOrder.isNumber(vatPercent)) {
                            return alert(""Input VAT %"");
                        }
                       // var vat =
    ");
                WriteLiteral(@"                    var vat = parseFloat(vatPercent) / 100;
                        var data = new Object();
                        //Sale Details Table
                        data.ProductId = productId
                        data.ProductVattypeId = 1;
                        data.Quantity = item;
                        data.UnitPrice = amount;
                        data.VATPercent = vatPercent;
                        data.DiscountPerItem = 0;
                        data.MeasurementUnitId = unitId;
                        data.SupplementaryDutyPercent = SupplementaryDutyPercent;

                        //TODO
                        var vatValue = parseFloat(amount);
                        vatValue = (vatValue * (vat));
                        var total = parseFloat(amount) + vatValue;
                        data.totalPrice = total;
                        data.totalVat = vatValue;
                        SalesOrder.SalesDetailList.push(data);

                        var html =");
                WriteLiteral(@" '<tr id=""' +
                            data.ProductId +
                            '"">' +
                            '<td>' +
                            SalesOrder.count +
                            '</td>' +
                            '<td>' +
                            productName +
                            '</td>' +
                            '<td>' +
                            MaxSaleQty +
                            '</td>' +

                            '<td>' +
                            item +
                            '</td>' +
                            '<td>' +
                            unitAmount+
                            '</td>' +
                            '<td>' +
                            SupplementaryDutyPercent+
                            '</td>' +
                            '<td>' +
                            amount +
                            '</td>' +
                            '<td>' +
                            unit +
         ");
                WriteLiteral(@"                   '</td>' +
                            '<td>' +
                            vatPercent +
                            '</td>' +

                            '<td>' +
                            vatValue +
                            '</td>' +
                            '<td>' +
                            total +
                            '</td>' +
                            '<td><span onclick=""Delete(' +
                            data.ProductId +
                            ')""  class=""btn-xs glyphicon glyphicon-minus""></a></span></td>';

                        html += '</tr>';

                        $(""table#gridTable > tbody"").append(html);
                        SalesOrder.CalculateTotalPriceAndVat(total, vatValue);
                        SalesOrder.gridTableEmpty();
                        SalesOrder.count++;

                    }
                }

            },

            delete: function (id) {
                for (var key in SalesOrder.Sales");
                WriteLiteral(@"DetailList) {
                    var value = SalesOrder.SalesDetailList[key].ProductId;
                    if (SalesOrder.SalesDetailList[key].ProductId == id) {
                        SalesOrder.CalculateTotalPriceAndVat(-SalesOrder.SalesDetailList[key].totalPrice, -SalesOrder.SalesDetailList[key].totalVat);
                    }
                }

                $.each(SalesOrder.SalesDetailList,
                    function (i, v) {
                        if (SalesOrder.SalesDetailList[i].ProductId == id) {
                            SalesOrder.SalesDetailList.splice(i, 1);
                        }
                        $(""tr#"" + id).remove().fadeOut();

                    });

            },
            deleteDocument: function (id) {

                $.each(SalesOrder.ContentInfoJson,
                    function (i, v) {
                        if (SalesOrder.ContentInfoJson[i].rowCount == id) {

                            SalesOrder.ContentInfoJson.splice(i, 1);

   ");
                WriteLiteral(@"                     }
                        $("" tr#"" + id).remove().fadeOut();

                    });

            },
            deletePayment: function (id) {

                $.each(SalesOrder.SalesPaymentReceiveJson,
                    function (i, v) {
                        if (SalesOrder.SalesPaymentReceiveJson[i].rowCountPayment == id) {

                            SalesOrder.SalesPaymentReceiveJson.splice(i, 1);

                        }
                        $(""tr#"" + id).remove().fadeOut();

                    });

            },
            calculate: function (value) {

                var unitAmount = $('#amount').val();

                if (!SalesOrder.isNumber(unitAmount) || !(SalesOrder.isNumber(value))) {
                    //$(""#Amount"").val(SalesOrder.unitAmount);
                    return; //alert(""Error! You must enter a number into the qty and cost fields!"");
                } else {

                    unitAmount = SalesOrder.unitAmount * val");
                WriteLiteral(@"ue;
                    $('#amount').val(unitAmount);
                    $(""#Amount"").text(unitAmount / value);

                    SalesOrder.calculateTotal();
                }

            },
            calculateUnitPrice: function (value) {
                var qty = $('#item').val();
                if (!SalesOrder.isNumber(qty) || !(SalesOrder.isNumber(value))) {

                    return;
                } else {
                    $(""#Amount"").text(Math.floor(value / qty));
                }

            },
            Save: function () {
                //Get Data for Sale
                var InvoiceNo = $('#InvoiceNo').val();
                var VatChallanNo = $('#VatChallanNo').val();
                var Discount = $('#Discount').val();
                var IsVatDeductedInSource = $('#IsVatDeductedInSource').is("":checked"");
                var ReceiverName = $('#ReceiverName').val();
                var ReceiverContactNo = $('#ReceiverContactNo').val();

             ");
                WriteLiteral(@"   var CustomerId = $('#CustomerId').val();
                var WorkOrderNo = $('#WorkOrderNo').val();
                var ShippingAddress = $('#ShippingAddress').val();
                var ShippingCountryId = $('#ShippingCountryId').val();
                var SalesTypeId = 2;
                var ExportTypeId = $('#ExportTypeId').val();

                var ExpectedDeleveryDate = $('#ExpectedDeleveryDate').val();
                var DeliveryDate = $('#DeliveryDate').val();

                var LcNo = $('#LcNo').val();
                var LcDate = $('#LcDate').val();
                var BillOfEntry = $('#BillOfEntry').val();
                var BillOfEntryDate = $('#BillOfEntryDate').val();
                var DueDate = $('#DueDate').val();
                var TermsOfLc = $('#TermsOfLc').val();
                var CustomerPoNumber = $('#CustomerPoNumber').val();
                var SalesDeliveryTypeId = $('#SalesDeliveryTypeId').val();
                var DeliveryMethodId = $('#DeliveryMethod");
                WriteLiteral(@"Id').val();
               // var SupplementaryDutyPercent = $('#SupplementaryDutyPercent').val();
                //var reqEntry = new Object();
                var data = new FormData();

                for (var i = 0; i < SalesOrder.SalesDetailList.length; i++) {
                    data.append('SalesDetailList[' + i + '].ProductId', SalesOrder.SalesDetailList[i].ProductId);
                    data.append('SalesDetailList[' + i + '].Quantity', SalesOrder.SalesDetailList[i].Quantity);
                    data.append('SalesDetailList[' + i + '].UnitPrice', SalesOrder.SalesDetailList[i].UnitPrice);
                    data.append('SalesDetailList[' + i + '].DiscountPerItem', SalesOrder.SalesDetailList[i].DiscountPerItem);
                    data.append('SalesDetailList[' + i + '].SupplementaryDutyPercent', SalesOrder.SalesDetailList[i].SupplementaryDutyPercent);
                    data.append('SalesDetailList[' + i + '].VATPercent', SalesOrder.SalesDetailList[i].VATPercent);
                  ");
                WriteLiteral(@"  data.append('SalesDetailList[' + i + '].MeasurementUnitId', SalesOrder.SalesDetailList[i].MeasurementUnitId);
                }
                //TODO
                for (var i = 0; i < SalesOrder.ContentInfoJson.length; i++) {
                    data.append('ContentInfoJson[' + i + '].DocumentTypeId', SalesOrder.ContentInfoJson[i].DocumentTypeId);
                    data.append('ContentInfoJson[' + i + '].UploadFile', SalesOrder.ContentInfoJson[i].UploadFile);

                }
                //TODO
                for (var i = 0; i < SalesOrder.SalesPaymentReceiveJson.length; i++) {
                    data.append('SalesPaymentReceiveJson[' + i + '].ReceivedPaymentMethodId', SalesOrder.SalesPaymentReceiveJson[i].ReceivedPaymentMethodId);
                    data.append('SalesPaymentReceiveJson[' + i + '].ReceiveAmount', SalesOrder.SalesPaymentReceiveJson[i].ReceiveAmount);
                    data.append('SalesPaymentReceiveJson[' + i + '].ReceiveDate', SalesOrder.SalesPaymentReceiveJson[");
                WriteLiteral(@"i].ReceiveDate);
                }

                data.append(""InvoiceNo"", InvoiceNo);
                data.append(""VatChallanNo"", VatChallanNo);
                data.append(""OrganizationId"", 1);
                data.append(""DiscountOnTotalPrice"", Discount);
                data.append(""IsVatDeductedInSource"", IsVatDeductedInSource);
                data.append(""CustomerId"", CustomerId);
                data.append(""ReceiverName"", ReceiverName);
                data.append(""ReceiverContactNo"", ReceiverContactNo);
                data.append(""ShippingAddress"", ShippingAddress);
                data.append(""ShippingCountryId"", ShippingCountryId);
                data.append(""SalesTypeId"", SalesTypeId);//TODO
                data.append(""SalesDeliveryTypeId"", SalesDeliveryTypeId);//TODO
                data.append(""WorkOrderNo"", WorkOrderNo);//TODO
                data.append(""SalesDate"", '2019-01-01');//TODO
                data.append(""ExpectedDeliveryDate"", ExpectedDeleveryDate);//TODO
   ");
                WriteLiteral(@"             data.append(""DeliveryDate"", DeliveryDate);//TODO
                data.append(""DeliveryMethodId"", DeliveryMethodId);//TODO
                data.append(""ExportTypeId"", ExportTypeId);//TODO
                data.append(""LcNo"", LcNo);//TODO
                data.append(""LcDate"", LcDate);//TODO
                data.append(""BillOfEntry"", BillOfEntry);//TODO
                data.append(""BillOfEntryDate"", BillOfEntryDate);//TODO
                data.append(""DueDate"", DueDate);//TODO
                data.append(""TermsOfLc"", TermsOfLc);//TODO
                data.append(""CustomerPoNumber"", CustomerPoNumber);//TODO
                data.append(""IsTaxInvoicePrined"", 0);//TODO
                data.append(""CreatedBy"", 1);//TODO
                data.append(""CreatedTime"", '2019-01-01');//TODO
                data.append(""__RequestVerificationToken"", $(""input[name=__RequestVerificationToken]"").val());

                $.ajax({
                    url: '");
                EndContext();
                BeginContext(36905, 34, false);
#line 818 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
                     Write(Url.Action("CreateAsync", "Sales"));

#line default
#line hidden
                EndContext();
                BeginContext(36939, 648, true);
                WriteLiteral(@"',
                    data: data,
                    type: ""POST"",
                    processData: false,
                    contentType: false,
                    dataType: ""json"",
                    beforeSend: function () {
                        $(""#loading"").show();
                    },

                    success: function (result) {
                        $(""#showData"").html("""");

                        if (result == false) {
                            alert(""Please add atleast on Sale Details"");
                        }
                        else {
                            window.location.href = '");
                EndContext();
                BeginContext(37588, 28, false);
#line 835 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
                                               Write(Url.Action("Index", "Sales"));

#line default
#line hidden
                EndContext();
                BeginContext(37616, 1532, true);
                WriteLiteral(@"';
                        }
                    },
                    error: function (x, e) {
                        $(""#loading"").hide();
                        alert('error');
                    }
                });
            },
            product : {
                init: function () { },
                productAutoComplete: function () {
                    var materialforrequsition = {
                        Initialize: function () {
                            materialforrequsition.Typehead();
                        },

                        Typehead: function () {
                            $('#Product').typeahead('destroy');
                            $('#Product').typeahead({
                                    hint: true,
                                    highlight: true,
                                    minLength: 2,
                                },
                                {
                                    items: 8,
                      ");
                WriteLiteral(@"              name: 'Product',
                                    //displayKey: 'Material.Name',
                                    displayKey: function (s) {
                                        //alert(s.Name);
                                        return s.name;
                                    },
                                    property: ""ProductId"",
                                    source: function (strmaterial, process) {
                                        var url = '");
                EndContext();
                BeginContext(39149, 49, false);
#line 869 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
                                              Write(Url.Content("~/Products/SaleProductAutoComplete"));

#line default
#line hidden
                EndContext();
                BeginContext(39198, 3602, true);
                WriteLiteral(@"';
                                        return $.getJSON(url, { filterText: $(""#Product"").val() }, function (Data) {

                                            return process(Data);
                                        });
                                    },
                                    updater: function (item) {
                                        return item.name;
                                    }
                                }).on('typeahead:selected', function (obj, datum) {

                                    $(""#ProductId"").val(datum.id);
                                    $('#Amount').val(datum.unitPrice);
                                     $('#item').val(1);
                                    $('#amount').val(datum.unitPrice);
                                    $('#VAT').val(datum.vat);
                                    $('#MaxSaleQty').val(datum.maxSaleQty);
                                    $('#SupplementaryDutyPercent').val(datum.Supplimentary");
                WriteLiteral(@"Duty);
                                    SalesOrder.unitAmount = datum.unitPrice;
                                    SalesOrder.calculateTotal();
                               //SalesOrder.unitAmount = 0;

                            });
                            $(""#Product"").focus();

                        }
                    }
                    materialforrequsition.Initialize();
                }
            }
        }

        $(document).ready(function() {
            $('#add').click(function() {
                SalesOrder.add();
            });

            $('#save').click(function () {
                SalesOrder.Save();
            });
            $(""#ExpectedDeleveryDate"").datepicker();
            $(""#ExpectedDeleveryDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            $(""#PaymentDate"").datepicker();
            $(""#PaymentDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            $(""#DeliveryDate"").datepicker();
            $(""#Deliver");
                WriteLiteral(@"yDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            $(""#LcDate"").datepicker();
            $(""#LcDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            $(""#BillOfEntryDate"").datepicker();
            $(""#BillOfEntryDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            $(""#DueDate"").datepicker();
            $(""#DueDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            SalesOrder.product.productAutoComplete();
        });
        function DeleteDocument(id) {
            SalesOrder.deleteDocument(id);
        };
        function DeletePayment(id) {
            SalesOrder.deletePayment(id);
        };
        function Delete(id) {
           // SalesOrder.count -= SalesOrder.count;
            SalesOrder.delete(id);
        };

        $(""#item"").keyup(function () {
            var that = this,
            numberOfItem = $(this).val();
            SalesOrder.calculate(numberOfItem);

        });
        $('#addDocument').click(functi");
                WriteLiteral(@"on() {
            SalesOrder.addDocument();
        });
        $('#addPayment').click(function() {
            SalesOrder.addPayment();
        });
        $(""#amount"").keyup(function () {
            var that = this,
                amount = $(this).val();
            SalesOrder.calculateUnitPrice(amount);

        });
        $(""#CustomerId"").change(function () {
            debugger
            var end = this.value;
            var id = $('#CustomerId').val();
            $.ajax({
                url: '");
                EndContext();
                BeginContext(42801, 44, false);
#line 957 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\SaleForeign.cshtml"
                 Write(Url.Action("GetCustomerDetails", "Customer"));

#line default
#line hidden
                EndContext();
                BeginContext(42845, 813, true);
                WriteLiteral(@"',
                dataType: ""json"",
                type: ""GET"",
                data: { id: id },
                beforeSend: function () {
                    $(""#loading"").show();
                },
                success: function (result) {
                    $(""#loading"").hide();

                    if (result == false) {
                        alert(""Please add atleast on purchase Details"");
                    }
                    else {
                        $('#CustomerContactNo').val(result.phoneNo);
                       // alert(result);
                    }
                },
                error: function (x, e) {
                    $(""#loading"").hide();
                    alert(""Error"");
                }
            });
        });
    </script>

");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
