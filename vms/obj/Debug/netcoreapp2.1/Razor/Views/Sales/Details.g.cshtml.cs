#pragma checksum "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "37d545a34dbb9cd61e280c9f682f1baa5fc5d8a0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sales_Details), @"mvc.1.0.view", @"/Views/Sales/Details.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Sales/Details.cshtml", typeof(AspNetCore.Views_Sales_Details))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\personal\New folder\MoneyMoney\vms\Views\_ViewImports.cshtml"
using vms;

#line default
#line hidden
#line 2 "E:\personal\New folder\MoneyMoney\vms\Views\_ViewImports.cshtml"
using vms.Models;

#line default
#line hidden
#line 1 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
using Microsoft.VisualStudio.Web.CodeGeneration;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"37d545a34dbb9cd61e280c9f682f1baa5fc5d8a0", @"/Views/Sales/Details.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c551d0fb6d1cb6e33accdc0872f5172ad460dc03", @"/Views/_ViewImports.cshtml")]
    public class Views_Sales_Details : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<vms.entity.models.Sale>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/typeahead.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-ui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(81, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 4 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
  
    ViewData["Title"] = "Details";

#line default
#line hidden
            BeginContext(126, 69, true);
            WriteLiteral("<input type=\"hidden\" class=\"form-control\" id=\"SalesId\" name=\"SalesId\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 195, "\"", 217, 1);
#line 7 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
WriteAttributeValue("", 203, Model.SalesId, 203, 14, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(218, 383, true);
            WriteLiteral(@" />

<input type=""hidden"" class=""form-control"" id=""ProductId"" name=""ProductId"" />
<h2>Sale Order Info</h2>

<div class=""row"">

    <div class=""col-md-12 "">
        <div class=""col-md-5 "">
            <!-- BEGIN SAMPLE FORM PORTLET-->
            <div class=""col-md-12 "">
                <div class=""form-group"">

                    <label for=""form_control"">Customer : ");
            EndContext();
            BeginContext(602, 19, false);
#line 20 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                    Write(Model.Customer.Name);

#line default
#line hidden
            EndContext();
            BeginContext(621, 56, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n\r\n");
            EndContext();
            BeginContext(919, 144, true);
            WriteLiteral("\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n\r\n                    <label for=\"form_control\">WorkOrderNo : ");
            EndContext();
            BeginContext(1064, 17, false);
#line 34 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                       Write(Model.WorkOrderNo);

#line default
#line hidden
            EndContext();
            BeginContext(1081, 201, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n                    <label for=\"form_control_1\">Shipping Address : ");
            EndContext();
            BeginContext(1283, 21, false);
#line 39 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                              Write(Model.ShippingAddress);

#line default
#line hidden
            EndContext();
            BeginContext(1304, 200, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group \">\r\n\r\n                    <label for=\"form_control_1\">Sales Type : ");
            EndContext();
            BeginContext(1505, 29, false);
#line 46 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                        Write(Model.SalesType.SalesTypeName);

#line default
#line hidden
            EndContext();
            BeginContext(1534, 246, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-5 \">\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n\r\n                    <label for=\"form_control_1\">S.D.Type : ");
            EndContext();
            BeginContext(1781, 28, false);
#line 55 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                      Write(Model.SalesDeliveryType.Name);

#line default
#line hidden
            EndContext();
            BeginContext(1809, 198, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n\r\n                    <label for=\"form_control_1\">Export Type : ");
            EndContext();
            BeginContext(2008, 31, false);
#line 61 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                         Write(Model.ExportType.ExportTypeName);

#line default
#line hidden
            EndContext();
            BeginContext(2039, 201, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n\r\n                    <label for=\"form_control_1\">Expt.D. Date : ");
            EndContext();
            BeginContext(2241, 26, false);
#line 68 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                          Write(Model.ExpectedDeliveryDate);

#line default
#line hidden
            EndContext();
            BeginContext(2267, 193, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n\r\n                    <label for=\"form_control_1\">D.Date : ");
            EndContext();
            BeginContext(2461, 18, false);
#line 74 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                    Write(Model.DeliveryDate);

#line default
#line hidden
            EndContext();
            BeginContext(2479, 200, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12 \">\r\n                <div class=\"form-group\">\r\n\r\n                    <label for=\"form_control_1\">Invoice No. : ");
            EndContext();
            BeginContext(2680, 15, false);
#line 81 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                                         Write(Model.InvoiceNo);

#line default
#line hidden
            EndContext();
            BeginContext(2695, 54, true);
            WriteLiteral("</label>\r\n                </div>\r\n            </div>\r\n");
            EndContext();
            BeginContext(2979, 115, true);
            WriteLiteral("        </div>\r\n\r\n        <div class=\"col-md-2 \" style=\"margin-top:0px;\">\r\n\r\n            <a style=\"margin-top:10px\"");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 3094, "\"", 3122, 1);
#line 94 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
WriteAttributeValue("", 3101, Url.Action("#", "#"), 3101, 21, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(3123, 423, true);
            WriteLiteral(@" class=""btn btn-danger btn-sm pull-right""><i class=""fa fa-print""></i> Print Mushak 6.2 </a>
        </div>
    </div>

    <!-- END SAMPLE FORM PORTLET-->
</div>
<h2>Sale Order Details</h2>
<div class=""col-md-12 "">
    <!-- BEGIN SAMPLE FORM PORTLET-->

    <table class=""table table-bordered"" id=""gridTable"">
        <thead>
            <tr>
                <th>Serial</th>
                <th>Product</th>
");
            EndContext();
            BeginContext(3589, 798, true);
            WriteLiteral(@"                <th>Vendor</th>
                <th>Invoice No.</th>
                <th>Qty</th>
                <th>InitialAmount</th>
                <th>Amount</th>
                <th style=""width: 100px"">Unit</th>
                <th> Price</th>
                <th>VAT(%)</th>
                <th>VAT Value</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>

        <tbody id=""tblPurchaseOD""></tbody>
        <tfoot>
            <tr>
                <td colspan=""10"">Total</td>

                <td colspan=""1""><label id=""TotalVat"" name=""TotalVat"" /></td>

                <td><label id=""TotalPrice"" name=""TotalPrice"" /></td>

                <td></td>
            </tr>
        </tfoot>
    </table>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(4404, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(4410, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "71b01d7cbbbe4e15b74e1990bfcc4082", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4458, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(4464, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4fe9de20d9d04c01aac5b4884066945a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4505, 386, true);
                WriteLiteral(@"
    <script>

        var SalesOrder = {
            init: function() {},
            count: 1,
            unitAmount: 0,
            totalPrice: 0,
            totalVat: 0,
            SaleOrderDetailList: [],
            item: [],
            getSaleOrder: function () {
                var id = $('#SalesId').val();
                $.ajax({
                    url: '");
                EndContext();
                BeginContext(4892, 37, false);
#line 155 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                     Write(Url.Content("~/Sales/GetSaleDetails"));

#line default
#line hidden
                EndContext();
                BeginContext(4929, 10058, true);
                WriteLiteral(@"',
                    type: 'Get',
                    data: { saleId: id },
                    contentType: ""application/json; charset=utf-8"",
                    success: function (result) {
                        $.each(result, function (i, v) {
                             ExistingItems(result[i],i+1);
                        });
                    },
                    error: function (x, e) {
                        alert(e);
                    }
                });
            },

            gridTableEmpty: function() {
                $('#ProductId').val('');
                $('#Product').val('');
                $('#Amount').val('');
                $('#item').val('');
                $('#amount').val('');
                $('#VAT').val('');
            },
            isNumber:function (n) {
                return !isNaN(parseFloat(n)) && isFinite(n);
            },
            CalculateTotalPriceAndVat: function(totalPrice,totalVat) {
                SalesOrder.total");
                WriteLiteral(@"Price += totalPrice;
                SalesOrder.totalVat += totalVat;
                $('#TotalPrice').text(Math.round(SalesOrder.totalPrice));
                $('#TotalVat').text(Math.round(SalesOrder.totalVat));
            },
            add: function () {

                var productName = $('#Product').val();
                var productId = $('#ProductId').val();
                var vendor = $('#VendorId option:selected').text();
                var vendorId = $('#VendorId').val();
                var PurchaseInvoice = $('#PurchaseInvoice').val();
                var item = $('#item').val();
                var InitialAmount = $('#InitialAmount').val();
                var amount = $('#amount').val();
                var vatPercent = $('#VAT').val();
                var unit = $('#unit option:selected').text();
                var unitId = $('#unit').val();
                var unitAmount = $('#Amount').val();

                if (productId>0) {

                    var canAdd = true");
                WriteLiteral(@";

                    $.each(SalesOrder.SaleOrderDetailList,
                        function (i, v) {
                            if (SalesOrder.SaleOrderDetailList[i].ProductId == productId) {
                                alert('Sorry! product Order Exists.');
                                canAdd = false;

                            }

                        });
                    if (!parseInt(item)) {
                        alert('Number of item is inValid!');
                        canAdd = false;
                    }
                    if (!parseInt(amount)) {
                        alert('Amount of item is inValid!');
                        canAdd = false;
                    }
                    if (canAdd) {

                        if (!SalesOrder.isNumber(vatPercent)) {
                            return alert(""Input VAT %"");
                        }
                        var vat = parseFloat(vatPercent) / 100;
                        var data = new Objec");
                WriteLiteral(@"t();
                        //Sale Details Table
                        data.ProductId = productId;
                        data.SalesId = 0;
                        data.ProductVattypeId = 1;
                        data.Iteams = item;
                        data.Amount = amount;
                        data.Vat = vatPercent;
                        data.InitialQty = InitialAmount;
                        data.MeasurementUnitId = 3;
                        data.PurchaseVendorId = vendorId;
                        data.PurchaseInvoice = PurchaseInvoice;
                        data.CreatedBy =3
                        data.CreatedTime ='2019-01-15'
                        //TODO
                        var vatValue = parseFloat(amount);
                        vatValue = Math.ceil(vatValue * (vat));
                        var total = parseFloat(amount) + vatValue;
                        data.totalPrice = total;
                        data.totalVat = vatValue;
                        ");
                WriteLiteral(@"SalesOrder.SaleOrderDetailList.push(data);

                        var html = '<tr id=""' +
                            data.ProductId +
                            '"">' +
                            '<td>' +
                            SalesOrder.count +
                            '</td>' +
                            '<td>' +
                            productName +
                            '</td>' +
                            '<td>' +
                            vendor +
                            '</td>' +
                            '<td>' +
                            PurchaseInvoice +
                            '</td>' +
                            '<td>' +
                            item +
                            '</td>' +
                            '<td>' +
                            InitialAmount +
                            '</td>' +
                            '<td>' +
                            amount +
                            '</td>' +
             ");
                WriteLiteral(@"               '<td>' +
                            unit +
                            '</td>' +
                            '<td>' +
                            unitAmount+
                            '</td>' +

                            '<td>' +
                            vatPercent +
                            '</td>' +

                            '<td>' +
                            vatValue +
                            '</td>' +
                            '<td>' +
                            total +
                            '</td>' +
                            '<td><span onclick=""Delete(' +
                            data.ProductId +
                            ')""  class=""btn-xs glyphicon glyphicon-minus""></a></span></td>';

                        html += '</tr>';

                        $(""table#gridTable > tbody"").append(html);
                        SalesOrder.CalculateTotalPriceAndVat(total, vatValue);
                        SalesOrder.gridTableEmpty();
    ");
                WriteLiteral(@"                    SalesOrder.count++;

                    }
                }

            },

            delete: function (id) {
                for (var key in SalesOrder.SaleOrderDetailList) {
                    var value = SalesOrder.SaleOrderDetailList[key].ProductId;
                    if (SalesOrder.SaleOrderDetailList[key].ProductId == id) {
                        SalesOrder.CalculateTotalPriceAndVat(-SalesOrder.SaleOrderDetailList[key].totalPrice, -SalesOrder.SaleOrderDetailList[key].totalVat);
                    }
                }
                $.each(SalesOrder.SaleOrderDetailList,
                    function (i, v) {
                        if (SalesOrder.SaleOrderDetailList[i].ProductId == id) {
                            SalesOrder.SaleOrderDetailList.splice(i, 1);
                        }
                        $(""tr#"" + id).remove().fadeOut();

                    });

            },
            calculate: function (value) {

                var unitAmo");
                WriteLiteral(@"unt = $('#amount').val();
                if (!SalesOrder.isNumber(unitAmount) || !(SalesOrder.isNumber(value))) {
                    //$(""#Amount"").val(SalesOrder.unitAmount);
                    return; //alert(""Error! You must enter a number into the qty and cost fields!"");
                } else {
                    $(""#Amount"").val(Math.ceil(unitAmount / value));
                }

            },
            calculateUnitPrice: function (value) {
                var qty = $('#item').val();
                if (!SalesOrder.isNumber(qty) || !(SalesOrder.isNumber(value))) {
                    //$(""#Amount"").val(SalesOrder.unitAmount);
                    return; //alert(""Error! You must enter a number into the qty and cost fields!"");
                } else {
                    $(""#Amount"").val(Math.floor(value / qty));
                }

            },
            Save: function () {
                //Get Data for Sale
                var CustomerId = $('#CustomerId').val();
       ");
                WriteLiteral(@"         var SalesId = $('#SalesId').val();
                var CustomerContactNo = $('#CustomerContactNo').val();
                var WorkOrderNo = $('#WorkOrderNo').val();
                var ShippingAddress = $('#ShippingAddress').val();
                var CountryId = $('#CountryId').val();
                var SalesTypeId = $('#SalesTypeId').val();
                var ExportTypeId = $('#ExportTypeId').val();
                var Amount = $('#PurchaseAmount').val();
                var ExpectedDeleveryDate = $('#ExpectedDeleveryDate').val();
                var DeliveryDate = $('#DeliveryDate').val();
                var Iteams = $('#PurchaseIteams').val();
                var Vat = $('#PurchaseVat').val();
                var Discount = $('#Discount').val();
                var SalesDeliveryTypeId = $('#SalesDeliveryTypeId').val();
                var reqEntry = new Object();
                reqEntry.SaleOrderDetailList = SalesOrder.SaleOrderDetailList;
                reqEntry.Organization");
                WriteLiteral(@"Id=1;
                reqEntry.ExpectedDeleveryDate=ExpectedDeleveryDate;
                reqEntry.CustomerId=CustomerId;
                reqEntry.CustomerContactNo = CustomerContactNo;
                reqEntry.Discount=Discount;
                reqEntry.IsComplete=1;
                reqEntry.WorkOrderNo = WorkOrderNo;
                reqEntry.ShippingAddress = ShippingAddress;
                reqEntry.CountryId = CountryId;
                reqEntry.SalesTypeId = SalesTypeId;
                reqEntry.CreatedBy=3;
                reqEntry.ExportTypeId = ExportTypeId;
                reqEntry.DeliveryDate = DeliveryDate;
                reqEntry.SalesDeliveryTypeId = SalesDeliveryTypeId;
                reqEntry.Flag = 1;
                reqEntry.SalesId = SalesId;
                $.ajax({
                    url: '");
                EndContext();
                BeginContext(14988, 34, false);
#line 382 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                     Write(Url.Action("CreateAsync", "Sales"));

#line default
#line hidden
                EndContext();
                BeginContext(15022, 581, true);
                WriteLiteral(@"',
                    dataType: ""json"",
                    type: ""POST"",
                    data: { vmSale: reqEntry },
                    beforeSend: function () {
                        $(""#loading"").show();
                    },
                    success: function (result) {
                        $(""#loading"").hide();

                        if (result == false) {
                            alert(""Please add atleast on purchase Details"");
                        }
                        else {
                            window.location.href = '");
                EndContext();
                BeginContext(15604, 28, false);
#line 396 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                               Write(Url.Action("Index", "Sales"));

#line default
#line hidden
                EndContext();
                BeginContext(15632, 1532, true);
                WriteLiteral(@"';
                        }
                    },
                    error: function (x, e) {
                        $(""#loading"").hide();
                        alert('error');
                    }
                });
            },
            product : {
                init: function () { },
                productAutoComplete: function () {
                    var materialforrequsition = {
                        Initialize: function () {
                            materialforrequsition.Typehead();
                        },

                        Typehead: function () {
                            $('#Product').typeahead('destroy');
                            $('#Product').typeahead({
                                    hint: true,
                                    highlight: true,
                                    minLength: 2,
                                },
                                {
                                    items: 8,
                      ");
                WriteLiteral(@"              name: 'Product',
                                    //displayKey: 'Material.Name',
                                    displayKey: function (s) {
                                        //alert(s.Name);
                                        return s.name;
                                    },
                                    property: ""ProductId"",
                                    source: function (strmaterial, process) {
                                        var url = '");
                EndContext();
                BeginContext(17165, 45, false);
#line 430 "E:\personal\New folder\MoneyMoney\vms\Views\Sales\Details.cshtml"
                                              Write(Url.Content("~/Products/ProductAutoComplete"));

#line default
#line hidden
                EndContext();
                BeginContext(17210, 4970, true);
                WriteLiteral(@"';
                                        return $.getJSON(url, { filterText: $(""#Product"").val() }, function (Data) {

                                            return process(Data);
                                        });
                                    },
                                    updater: function (item) {
                                        return item.name;
                                    }
                                }).on('typeahead:selected', function (obj, datum) {

                                    $(""#ProductId"").val(datum.id);
                                    $('#Amount').val('');
                                     $('#item').val('');
                                    $('#amount').val('');
                                    $('#VAT').val(datum.vat);
                                   SalesOrder.unitAmount = 0;

                            });
                            $(""#Product"").focus();

                        }
             ");
                WriteLiteral(@"       }
                    materialforrequsition.Initialize();
                }
            }
        }

        $(document).ready(function() {
            $('#add').click(function() {
                SalesOrder.add();
            });

            $('#save').click(function () {
                SalesOrder.Save();
            });

            $(""#ExpectedDeleveryDate"").datepicker();
            $(""#ExpectedDeleveryDate"").datepicker('option', 'dateFormat', 'dd M, yy');

            $(""#DeliveryDate"").datepicker();
            $(""#DeliveryDate"").datepicker('option', 'dateFormat', 'dd M, yy');
            SalesOrder.product.productAutoComplete();
            SalesOrder.getSaleOrder();
        });

        function Delete(id) {
           // SalesOrder.count -= SalesOrder.count;
            SalesOrder.delete(id);
        }

        $(""#item"").keyup(function () {
            var that = this,
            numberOfItem = $(this).val();
            SalesOrder.calculate(numberOfItem);
");
                WriteLiteral(@"
        });

        $(""#amount"").keyup(function () {
            var that = this,
                amount = $(this).val();
            SalesOrder.calculateUnitPrice(amount);

        });
        function ExistingItems(result,i) {

            if (result.productId > 0) {

                var data = new Object();
                data.ProductId = result.productId;
                data.SalesId = result.salesId;
                data.ProductVattypeId = result.productVattypeId;
                data.Iteams = result.iteams;
                data.Amount = result.amount;
                data.Vat = (result.vat / result.amount)*100;
                data.InitialAmount = result.initialAmount;
                data.MeasurementUnitId = result.measurementUnitId;
                data.PurchaseVendorId = result.purchaseVendorId;
                data.PurchaseInvoice = result.purchaseInvoice;
                data.CreatedBy = result.createdBy;
                data.CreatedTime = result.createdTime;
          ");
                WriteLiteral(@"      var unitPrice = result.amount / result.iteams;
                var vatValue = result.amount * (data.Vat / 100);
                var total = result.amount + vatValue
                data.totalPrice = total;
                data.totalVat = vatValue;
                SalesOrder.SaleOrderDetailList.push(data);

                var html = '<tr id=""' +
                    data.ProductId +
                    '"">' +
                    '<td>' +
                    i +
                    '</td>' +
                    '<td>' +
                    result.productName +
                    '</td>' +
                    '<td>' +
                    result.purchaseVendorId +
                    '</td>' +
                    '<td>' +
                    result.purchaseInvoice +
                    '</td>' +
                    '<td>' +
                    result.iteams +
                    '</td>' +
                    '<td>' +
                    result.initialAmount +
                    ");
                WriteLiteral(@"'</td>' +
                    '<td>' +
                    result.amount +
                    '</td>' +
                    '<td>' +
                    result.unit +
                    '</td>' +
                    '<td>' +
                    unitPrice+
                    '</td>' +

                    '<td>' +
                    data.Vat +
                    '</td>' +

                    '<td>' +
                   vatValue +
                    '</td>' +
                    '<td>' +
                    total +
                    '</td>' +
                    '<td></td>';

                html += '</tr>';

                $(""table#gridTable > tbody"").append(html);
                SalesOrder.CalculateTotalPriceAndVat(total, vatValue);
                SalesOrder.gridTableEmpty();

            }

        }
    </script>

");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<vms.entity.models.Sale> Html { get; private set; }
    }
}
#pragma warning restore 1591
